{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/uploads/logo.png","path":"uploads/logo.png","modified":0,"renderable":0},{"_id":"source/uploads/avatar.png","path":"uploads/avatar.png","modified":0,"renderable":0},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"c6f183b701c72e75630725141be6ac94cee59a96","modified":1481187327766},{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1481081332923},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1481081332923},{"_id":"themes/next/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1481081332924},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1481081332925},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1481081332926},{"_id":"source/favicon.ico","hash":"9af12c9a03801ad42e881e02425d70f62018f1a5","modified":1481262440370},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1481081332926},{"_id":"themes/next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1481081332928},{"_id":"themes/next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1481081332927},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1481081332925},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1481081332926},{"_id":"themes/next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1481081332949},{"_id":"themes/next/_config.yml","hash":"42b77c8216c20809914f939bb485a871d3b509f9","modified":1489646646556},{"_id":"source/_posts/ES5-array-prototype.md","hash":"c3540858f902628b224394d687cf5c87f243c8c0","modified":1489051749367},{"_id":"source/_posts/hello-world.md","hash":"605da0571da03037af9ee7f143dbf00e60598b6d","modified":1481100413421},{"_id":"source/_posts/web-chinese-fonts-guide.md","hash":"45ccbd456ac0b17f76d8d588e88b5d7f57c18b92","modified":1489647094407},{"_id":"source/_posts/h5-pimiao-game-project-summary.md","hash":"b0f5c680ede010bb50f8152cd7175a584d0cec34","modified":1484116637177},{"_id":"source/categories/index.md","hash":"16cb2aa616a3538f6721e4c74570fdc9eb7f0f55","modified":1481097101915},{"_id":"source/tags/index.md","hash":"01973f13871a0a6d3919d1fb2ad6a8ad25ff2c44","modified":1481097113459},{"_id":"source/_posts/html5-audio-across-pages-continues-play.md","hash":"d31a2794e5e55542c50dcc546cc6411612908516","modified":1489051726066},{"_id":"source/src/index.md","hash":"64d519c6d8ea8912018cb2fc9c0773f3707bcf2d","modified":1488272372422},{"_id":"source/uploads/logo.png","hash":"1acfa561da6438ebbb28e250e0fbafc6c38ccbbb","modified":1481263229774},{"_id":"source/uploads/avatar.png","hash":"acd913054a26f288798c6af8cdbb77fcce3e6237","modified":1481004105687},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1481081332923},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1481081332924},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1479197520000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1479197520000},{"_id":"themes/next/languages/en.yml","hash":"b7e2e66b99c494b7d615aa561a6404adc55d4ee5","modified":1481267279524},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1479197520000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1479197520000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1479197520000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1479197520000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1479197520000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1479197520000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1479197520000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"1af06b8eea9d18028b5eeeed3bcf347fbec878cc","modified":1481267164397},{"_id":"themes/next/languages/zh-hk.yml","hash":"0b0e4b04509196d2da3184fad2acae8bb8dac6b3","modified":1481267222895},{"_id":"themes/next/languages/zh-tw.yml","hash":"883a53424b5acf55d23002b5512eef790cbea2f6","modified":1481267229644},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1479197520000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1479197520000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1479197520000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1479197520000},{"_id":"themes/next/layout/_layout.swig","hash":"7a1e4443c3ba1e08c20e64ddbf0b8255d034dab0","modified":1479197520000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1479197520000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1479197520000},{"_id":"themes/next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1481081333014},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1479197520000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1479197520000},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1481081333015},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1481081333014},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1479197520000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1479197520000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b8aaa008aafe4c6e325f7513719e1c251430883e","modified":1479197520000},{"_id":"themes/next/layout/_macro/post.swig","hash":"f12f108c1f8e91cc55d49805d42c1fd96cdf51a6","modified":1479197520000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"afd82ec5d75502e425a02a7933ea02bde93f7952","modified":1481275894486},{"_id":"themes/next/layout/_partials/comments.swig","hash":"7a3ef28678467c45ee9416b41b943252e8036285","modified":1479197520000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1479197520000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1479197520000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1479197520000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1479197520000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1479197520000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1479197520000},{"_id":"themes/next/layout/_partials/search.swig.11570625","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1480656226000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1479197520000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1479197520000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1479197520000},{"_id":"themes/next/layout/_partials/header.swig","hash":"f3627f51810bc906e4020a3fef61bc3629b63581","modified":1479197520000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1479197520000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1479197520000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1479197520000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1479197520000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1479197520000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1479197520000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1479197520000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1481081332981},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1479197520000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1481081332981},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1481081332981},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1481081332982},{"_id":"themes/next/source/images/avatar.png","hash":"acd913054a26f288798c6af8cdbb77fcce3e6237","modified":1481004105687},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481081332984},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1481081332982},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1481081332984},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1481081332984},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1481081332983},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1481081332985},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1481081332985},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1481081332983},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1481081332983},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1479197520000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1479197520000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1479197520000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1479197520000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1479197520000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1479197520000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1479197520000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1479197520000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1479197520000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1479197520000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1479197520000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1479197520000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1479197520000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"82a2ac14d4200480a36bf10abcc3cc554ad744d6","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1479197520000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1479197520000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1479197520000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1479197520000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1479197520000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c5b28519b446c2af1e8754a6ae4d766823e6b348","modified":1479197520000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1479197520000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"3f0d6aa424f434e82ea507f740eeff110f996269","modified":1479197520000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1479197520000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1479197520000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1479197520000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1479197520000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1479197520000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1479197520000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1479197520000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1479197520000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1479197520000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1479197520000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1479197520000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1479197520000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1479197520000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1479197520000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1479197520000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1479197520000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1479197520000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1479197520000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1479197520000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1479197520000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1479197520000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1481081332989},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1481081332995},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1481081332989},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1481081332996},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1481081332997},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1479197520000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1481081332998},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1481081332997},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1479197520000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1481081332997},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1481081332995},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1481081332998},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1481081333009},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1481081332995},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1481081333008},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1481081333007},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1481081333009},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1481081333008},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1481081333008},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1481081333009},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1481081333011},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1481081333011},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1479197520000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1481081333013},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1481081333014},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1481081333013},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1481081333007},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1479197520000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1479197520000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1479197520000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1479197520000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1479197520000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1479197520000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1479197520000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"7b206cd8921bc042f8e37a74aea1abc8a5ec8ab4","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1479197520000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1479197520000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1479197520000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1479197520000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1479197520000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1479197520000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481081332990},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481081332989},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481081332990},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481081332990},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481081332991},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481081332991},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1481081332994},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1481081332994},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1481081332997},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1481081332996},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1481081332999},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1481081332999},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1481081332999},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1481081333006},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1481081332993},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1481081333010},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1481081333010},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1479197520000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1479197520000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1481081333001},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1481081333006},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1481081333001},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1481081333012},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"5357db10656b260f8b332c67bb06e486bc64a4ad","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"5433b6bc9d8f0c4685e760b326445ac51245b0a8","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1479197520000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1479197520000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1479197520000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1479197520000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1481081332991},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1481081332992},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1481081332991},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1481081332992},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1481081332993},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1481081332993},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1481081333005},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1479197520000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1479197520000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1481081333004},{"_id":"public/categories/index.html","hash":"4182a6e009331eacb285a2651fa38608436d6150","modified":1489646038574},{"_id":"public/tags/index.html","hash":"db9b234a247d82cd71d26bc6396cb0c9e7bba1af","modified":1489646038575},{"_id":"public/tags/array/index.html","hash":"54a151ee33765dc220fd2fb8fb803bcde0991021","modified":1489646038577},{"_id":"public/tags/localStorage/index.html","hash":"a34f4478cf04a894d8ae7b618bbd792be786c6aa","modified":1489646038577},{"_id":"public/archives/index.html","hash":"b80964b1262352d1bedf25b07e92ee5a70b0686b","modified":1489646038575},{"_id":"public/2016/12/06/hello-world/index.html","hash":"45c5648a9aa47cb0f9500db575999e45f073bd44","modified":1489646038575},{"_id":"public/tags/audio/index.html","hash":"8ae699f849c58e0ff99c98dcaa671932f7121a16","modified":1489646038577},{"_id":"public/archives/2016/12/index.html","hash":"44cdc7512885f581ce2e7db8bd61f4e3377d13e3","modified":1489646038575},{"_id":"public/archives/2016/index.html","hash":"177a916abf5ff605d3bf5814766be551834793ca","modified":1489646038575},{"_id":"public/archives/2017/index.html","hash":"33b379d00eb822ccf6b589e78782ad8d699ab8ab","modified":1489646038575},{"_id":"public/archives/2017/01/index.html","hash":"806f3d4603fe7317d04fd59ac6278a832bead020","modified":1489646038575},{"_id":"public/archives/2017/03/index.html","hash":"8e60988c4c70267fa37c2291bf50eee4d7589180","modified":1489646038575},{"_id":"public/src/index.html","hash":"6e555026fd96610c76eadbf21eaccc0d7c5e28c2","modified":1489646038577},{"_id":"public/2017/01/17/html5-audio-across-pages-continues-play/index.html","hash":"264207f48122289105d7d1baf4490e916ac5bc34","modified":1489646038577},{"_id":"public/2016/12/26/h5-pimiao-game-project-summary/index.html","hash":"0994d91a9e454291da375c9d3c269f5b6bc27a50","modified":1489646038577},{"_id":"public/index.html","hash":"904a86ba6dbf5ac6d061eae78c8228c871268607","modified":1489646038577},{"_id":"public/2017/03/08/ES5-array-prototype/index.html","hash":"248c58b44b04111628dd1f299b8b878aeffc9036","modified":1489646038577},{"_id":"public/2017/03/16/web-chinese-fonts-guide/index.html","hash":"d93bf21d89fba5470b090bf1c9820959e405a32c","modified":1489647254003},{"_id":"public/categories/javaScript日常笔记/index.html","hash":"ced9bc5db1d19ca27fa2e56ff1ad29231762efa3","modified":1489646038575},{"_id":"public/categories/项目总结/index.html","hash":"0c1ea275e3a05554a0c52a0daf4676da21a0bb5b","modified":1489646038575},{"_id":"public/tags/font/index.html","hash":"20b13ef9c94a84111686ba762d863b9717721ee7","modified":1489646038578}],"Category":[{"name":"javaScript日常笔记","_id":"cj0bzqxlw0004acajxha800ai"},{"name":"项目总结","_id":"cj0bzqxmc000aacajfa948mep"}],"Data":[],"Page":[{"title":"categories","date":"2016-12-07T07:36:04.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2016-12-07 15:36:04\ntype: \"categories\"\n---\n","updated":"2016-12-07T07:51:41.915Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cj0bzqxlq0001acajjpcmk4vq","content":"","excerpt":"","more":""},{"title":"tags","date":"2016-12-07T07:49:10.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-12-07 15:49:10\ntype: \"tags\"\n---\n","updated":"2016-12-07T07:51:53.459Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cj0bzqxlv0003acajrwygue7t","content":"","excerpt":"","more":""},{"title":"资源收集整理","date":"2016-12-09T06:58:21.000Z","type":"src","_content":"\n\n## CSS\n\n- [normalize.css](https://github.com/necolas/normalize.css)\n\n**CSS grid**\n- [neat - A lightweight semantic grid framework built with Sass](https://github.com/thoughtbot/neat)\n- [Gridforms - 网格表单](https://github.com/kumailht/gridforms/)\n- [TOAST - Insane, no-nonsense CSS grid](http://daneden.github.io/Toast/)\n\n**Animate**\n- [Effeckt.css - 动画库:modal,button,list,tab...](https://github.com/h5bp/Effeckt.css)\n- [Tridiv - Creating 3D shapes in CSS ](http://tridiv.com/)\n- [animate.css](https://github.com/daneden/animate.css)\n- [magic animations](http://www.minimamente.com/example/magic_animations/)\n- [Effeckt](http://h5bp.github.io/Effeckt.css/)\n- [Hover](https://github.com/IanLunn/Hover)\n- [ihover](https://github.com/gudh/ihover)\n- [SpinThatShit - CSSloader](https://github.com/MatejKustec/SpinThatShit)\n- [loaders.css](https://github.com/ConnorAtherton/loaders.css)\n- [css-loaders](https://github.com/lukehaas/css-loaders)\n- [SPINNERS - HTML and CSS \"loading icon\" animations](https://boguz.github.io/Spinners/)\n- [csspin - CSS Spinners and Loaders](https://github.com/webkul/csspin)\n- [csshake - Some CSS classes to move your DOM](https://github.com/elrumordelaluz/csshake)\n- [Rocket - Rocket create an animation from two items via jQuery](https://github.com/miniMAC/rocket)\n- [Animate Plus - CSS and SVG animation library](https://github.com/bendc/animateplus)\n- [textillate.js - CSS3 text animations](http://textillate.js.org/)\n- [mojs - 图形运动动画](https://github.com/legomushroom/mojs)\n\n**Framework**\n- [Pure - A set of small, responsive CSS modules](https://github.com/yahoo/pure)\n- [materialize - Materialize, a CSS Framework based on Material Design](https://github.com/dogfalo/materialize/)\n- [Bulma - A modern CSS framework based on Flexbox](https://github.com/jgthms/bulma)\n- [bootflat-Flat UI KIT based on Bootstrap 3.3.0 CSS framework](http://bootflat.github.io/index.html)\n- [mui-Material Design CSS Framework](https://github.com/muicss/mui)\n- [Flexbox Patterns - Build awesome user interfaces with CSS flexbox](http://www.flexboxpatterns.com/home)\n- [Pintsize-Super flexbox](http://pintsize.io/examples)\n- [picnic](https://github.com/picnicss/picnic)\n- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template)\n- [AdminLTE Control Panel Template](https://almsaeedstudio.com/)\n- [Refills - Components and patterns built with Bourbon and Neat](http://refills.bourbon.io/)\n\n\n**Flexbox**\n- [Flexbox Grid - flexbox布局框架](http://flexboxgrid.com/)\n- [Flexbox Patterns](http://www.flexboxpatterns.com/home)\n- [solved-by-flexbox](https://github.com/philipwalton/solved-by-flexbox)\n- [Flexibility - 各属性在线演示](https://jonathantneal.github.io/flexibility/)\n- [flexplorer - 布局](http://bennettfeely.com/flexplorer/)\n- [Properties for the flex container - 各种示例](http://codepen.io/enxaneta/full/adLPwv/)\n\n\n**Components**\n- [emoji-css](https://github.com/afeld/emoji-css)\n- [awesome-bootstrap-checkbox](https://github.com/flatlogic/awesome-bootstrap-checkbox)\n- [css-toggle-switch](https://github.com/ghinda/css-toggle-switch)\n- [simple-toggle-switch](http://www.cssflow.com/snippets/simple-toggle-switch/demo)\n\n**Utils**\n- [devices.css - CSS (Mostly) Flat Mobile Devices](https://github.com/marvelapp/devices.css)\n\n***\n\n## Font Icons\n- [Font Awesome](http://fontawesome.io/)\n- [ionicons](http://ionicons.com/)\n- [Material icons](https://material.io/icons/)\n- [Iconfont - 阿里巴巴矢量图标库](http://www.iconfont.cn/plus)\n\n\n***\n\n## javaScript\n- [Device.js - 设备判断 iOS, Android | Portrait vs. Landscape | Tablet vs. Mobile](https://github.com/matthewhudson/device.js)\n- [Clipboard.js - Copy to clipboard.No Flash](https://github.com/zenorocha/clipboard.js/)\n- [jquery.adaptive - backgrounds-提取图片颜色并作为背景色显示](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js)\n- [Percircle-CSS percentage circle built with jQuery](https://github.com/toubou91/percircle)\n- [jQuery Timer: Start/Stop/Resume/Remove](https://github.com/walmik/timer.jquery)\n- [TimeCircles](https://github.com/wimbarelds/TimeCircles)\n- [Multi-select](http://loudev.com/)\n- [Fakecrop - Resize and crop bigger images and elements inside a container element](https://github.com/VuongN/jQuery-Fakecrop)\n- [jQThumb - 按比例显示缩略图](https://github.com/pakcheong/jqthumb)\n- [Intro.js - Introductions for websites and features with a step-by-step guide](https://github.com/usablica/intro.js)\n- [Basil.js - Unified localstorage, cookie and session storage JavaScript API](https://github.com/Wisembly/basil.js)\n- [LocalForage - localForage is a fast and simple storage library for JavaScript](https://github.com/localForage/localForage)\n- [WebStorageCache - 对localStorage 和sessionStorage 进行了扩展，添加了超时时间，序列化方法](https://github.com/WQTeam/web-storage-cache)\n- [GridList - Drag and drop library for two-dimensional, resizable and responsive lists](https://github.com/hootsuite/grid)\n- [Notie - a clean and simple notification, input, and selection suite for javascript](https://github.com/jaredreich/notie)\n- [Slick - 轮播支持PC和Mobile](https://github.com/kenwheeler/slick/)\n\n\n## Animate javaScript/CSS3\n- [granim.js - 渐变动画/颜色/图片](https://github.com/sarcadass/granim.js)\n- [anime.js](https://github.com/juliangarnier/anime)\n- [shape-shifter](https://github.com/kennethcachia/shape-shifter)\n- [led - canvas粒子文字插件](https://github.com/lixinliang/led)\n- [ScrollReveal - 滚动显示动画](https://scrollrevealjs.org/)\n- [bounce.js](https://github.com/tictail/bounce.js)\n\n***\n\n\n## 移动端\n- [lib.flexible - 移动端自适应方案](https://github.com/amfe/lib-flexible)\n- [FastClick - 解决移动端浏览器 300 毫秒点击延迟问题](https://github.com/ftlabs/fastclick)\n- [noclickdelay.js - 取消移动设备上click事件的300毫秒延迟](https://github.com/baijunjie/noclickdelay.js)\n- [AlloyTouch - 腾讯AlloyTeam移动Web触摸解决方案](https://github.com/AlloyTeam/AlloyTouch/blob/master/README_CN.md)\n- [AlloyFinger - 多点触摸手势库](https://github.com/AlloyTeam/AlloyFinger)\n\n\n\n***\n\n\n## 微信小程序\n- [Wafer - 企业级微信小程序全栈方案](https://github.com/tencentyun/wafer)\n- [小相册](https://github.com/CFETeam/weapp-demo-album)\n- [地图定位](https://github.com/giscafer/wechat-weapp-mapdemo)\n- [豆瓣电影](https://github.com/zce/weapp-demo)\n- [购物车](https://github.com/SeptemberMaples/wechat-weapp-demo)\n- [番茄时钟](https://github.com/kraaas/timer)\n- [手机QQ](https://github.com/xiehui999/SmallAppForQQ)\n- [知乎日报](https://github.com/LiuCaiHe/wechat-app-sample)\n- [Apple Music](https://github.com/Sioxas/AppleMusic)\n- [wechat-app-music](https://github.com/eyasliu/wechat-app-music)\n- [We重邮 - 微信小程序](https://github.com/lanshan-studio/wecqupt)\n- [wxapp-cli - 微信小程序脚手架](https://github.com/MeCKodo/wxapp-cli)\n\n***\n\n## Vue.js\n- [Vue.js 2.0中文文档](https://vuefe.cn/v2/guide/)\n- [Vuex - 状态管理模式](https://vuex.vuejs.org/zh-cn/intro.html)\n- [vue-router2 - 路由](https://router.vuejs.org/zh-cn/)\n- [vue-amap - 基于Vue2.0和高德地图的地图组件](https://github.com/ElemeFE/vue-amap)\n- [mint-ui - Mobile UI elements for Vue.js](https://github.com/ElemeFE/mint-ui)\n- [element - A Vue.js 2.0 UI Toolkit for Web](https://github.com/ElemeFE/element)\n- [jackblog - vue 版个人博客系统](https://github.com/jackhutu/jackblog-vue)\n- [vux - 基于WeUI和Vue(2.x)开发的移动端UI组件库，主要服务于微信页面](https://github.com/airyland/vux)\n- [VueStar - 点赞动画组件](https://github.com/OYsun/VueStar)\n- [NeteaseCloudWebApp - 网易云音乐](https://github.com/javaSwing/NeteaseCloudWebApp)\n- [vue-ssr - vue服务端渲染模板](https://github.com/ccforward/vue-ssr)\n- [vue2-elm](https://github.com/bailicangdu/vue2-elm)\n\n\n***\n\n\n## JSON Data\n- [微票bannerList](http://json.bmbstack.com/bannerList)\n- [微票playingList](http://json.bmbstack.com/playingList)\n- [微票cinemaList](http://json.bmbstack.com/cinemaList)\n- [知乎日报](https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90)\n- [AD's API](https://api.imjad.cn/)\n\n\n***\n\n## 效率工具\n- [bourbon - A Lightweight Sass Tool Set](https://github.com/thoughtbot/bourbon)\n- [css3 cubic-bezier - 在线生成](http://cubic-bezier.com/)\n- [css3 tools - css3动画工具](https://isux.tencent.com/css3/tools.html)\n- [CSS3 Tool](http://westciv.com/tools/gradients/)\n- [spy-debugger - 微信调试，各种WebView样式调试、手机浏览器的页面真机调试](https://github.com/wuchangming/spy-debugger)\n- [cooking - 基于 webapck 但更友好的配置项、易用的扩展配置机制](http://elemefe.github.io/cooking/)\n\n\n## 前端构建脚手架\n- [webpack-seed - 基于webpack搭建纯静态页面型前端工程解决方案模板](https://github.com/chemdemo/webpack-seed)\n- [Webpack-Vue-MultiplePage - 在多页面项目下使用 Webpack + Vue](https://github.com/cnu4/Webpack-Vue-MultiplePage)\n- [jarvan4dev/vue-multi-page - 基于vue-cli脚手架修改而成的多页面(非SPA)项目脚手架](https://github.com/jarvan4dev/vue-multi-page)\n- [cooking-demo/multiple-pages-vue - Vue 2 + webpack 2 多页面例子](https://github.com/cooking-demo/multiple-pages-vue)\n- [cooking-demo/simple - vue2+webpack2单页面](https://github.com/cooking-demo/simple)\n- [fis3-base - 基于fis3的纯前端解决方案](https://github.com/yanhaijing/fis3-base)\n","source":"src/index.md","raw":"---\ntitle: 资源收集整理\ndate: 2016-12-09 14:58:21\ntype: \"src\"\n---\n\n\n## CSS\n\n- [normalize.css](https://github.com/necolas/normalize.css)\n\n**CSS grid**\n- [neat - A lightweight semantic grid framework built with Sass](https://github.com/thoughtbot/neat)\n- [Gridforms - 网格表单](https://github.com/kumailht/gridforms/)\n- [TOAST - Insane, no-nonsense CSS grid](http://daneden.github.io/Toast/)\n\n**Animate**\n- [Effeckt.css - 动画库:modal,button,list,tab...](https://github.com/h5bp/Effeckt.css)\n- [Tridiv - Creating 3D shapes in CSS ](http://tridiv.com/)\n- [animate.css](https://github.com/daneden/animate.css)\n- [magic animations](http://www.minimamente.com/example/magic_animations/)\n- [Effeckt](http://h5bp.github.io/Effeckt.css/)\n- [Hover](https://github.com/IanLunn/Hover)\n- [ihover](https://github.com/gudh/ihover)\n- [SpinThatShit - CSSloader](https://github.com/MatejKustec/SpinThatShit)\n- [loaders.css](https://github.com/ConnorAtherton/loaders.css)\n- [css-loaders](https://github.com/lukehaas/css-loaders)\n- [SPINNERS - HTML and CSS \"loading icon\" animations](https://boguz.github.io/Spinners/)\n- [csspin - CSS Spinners and Loaders](https://github.com/webkul/csspin)\n- [csshake - Some CSS classes to move your DOM](https://github.com/elrumordelaluz/csshake)\n- [Rocket - Rocket create an animation from two items via jQuery](https://github.com/miniMAC/rocket)\n- [Animate Plus - CSS and SVG animation library](https://github.com/bendc/animateplus)\n- [textillate.js - CSS3 text animations](http://textillate.js.org/)\n- [mojs - 图形运动动画](https://github.com/legomushroom/mojs)\n\n**Framework**\n- [Pure - A set of small, responsive CSS modules](https://github.com/yahoo/pure)\n- [materialize - Materialize, a CSS Framework based on Material Design](https://github.com/dogfalo/materialize/)\n- [Bulma - A modern CSS framework based on Flexbox](https://github.com/jgthms/bulma)\n- [bootflat-Flat UI KIT based on Bootstrap 3.3.0 CSS framework](http://bootflat.github.io/index.html)\n- [mui-Material Design CSS Framework](https://github.com/muicss/mui)\n- [Flexbox Patterns - Build awesome user interfaces with CSS flexbox](http://www.flexboxpatterns.com/home)\n- [Pintsize-Super flexbox](http://pintsize.io/examples)\n- [picnic](https://github.com/picnicss/picnic)\n- [CoreUI-Free-Bootstrap-Admin-Template](https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template)\n- [AdminLTE Control Panel Template](https://almsaeedstudio.com/)\n- [Refills - Components and patterns built with Bourbon and Neat](http://refills.bourbon.io/)\n\n\n**Flexbox**\n- [Flexbox Grid - flexbox布局框架](http://flexboxgrid.com/)\n- [Flexbox Patterns](http://www.flexboxpatterns.com/home)\n- [solved-by-flexbox](https://github.com/philipwalton/solved-by-flexbox)\n- [Flexibility - 各属性在线演示](https://jonathantneal.github.io/flexibility/)\n- [flexplorer - 布局](http://bennettfeely.com/flexplorer/)\n- [Properties for the flex container - 各种示例](http://codepen.io/enxaneta/full/adLPwv/)\n\n\n**Components**\n- [emoji-css](https://github.com/afeld/emoji-css)\n- [awesome-bootstrap-checkbox](https://github.com/flatlogic/awesome-bootstrap-checkbox)\n- [css-toggle-switch](https://github.com/ghinda/css-toggle-switch)\n- [simple-toggle-switch](http://www.cssflow.com/snippets/simple-toggle-switch/demo)\n\n**Utils**\n- [devices.css - CSS (Mostly) Flat Mobile Devices](https://github.com/marvelapp/devices.css)\n\n***\n\n## Font Icons\n- [Font Awesome](http://fontawesome.io/)\n- [ionicons](http://ionicons.com/)\n- [Material icons](https://material.io/icons/)\n- [Iconfont - 阿里巴巴矢量图标库](http://www.iconfont.cn/plus)\n\n\n***\n\n## javaScript\n- [Device.js - 设备判断 iOS, Android | Portrait vs. Landscape | Tablet vs. Mobile](https://github.com/matthewhudson/device.js)\n- [Clipboard.js - Copy to clipboard.No Flash](https://github.com/zenorocha/clipboard.js/)\n- [jquery.adaptive - backgrounds-提取图片颜色并作为背景色显示](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js)\n- [Percircle-CSS percentage circle built with jQuery](https://github.com/toubou91/percircle)\n- [jQuery Timer: Start/Stop/Resume/Remove](https://github.com/walmik/timer.jquery)\n- [TimeCircles](https://github.com/wimbarelds/TimeCircles)\n- [Multi-select](http://loudev.com/)\n- [Fakecrop - Resize and crop bigger images and elements inside a container element](https://github.com/VuongN/jQuery-Fakecrop)\n- [jQThumb - 按比例显示缩略图](https://github.com/pakcheong/jqthumb)\n- [Intro.js - Introductions for websites and features with a step-by-step guide](https://github.com/usablica/intro.js)\n- [Basil.js - Unified localstorage, cookie and session storage JavaScript API](https://github.com/Wisembly/basil.js)\n- [LocalForage - localForage is a fast and simple storage library for JavaScript](https://github.com/localForage/localForage)\n- [WebStorageCache - 对localStorage 和sessionStorage 进行了扩展，添加了超时时间，序列化方法](https://github.com/WQTeam/web-storage-cache)\n- [GridList - Drag and drop library for two-dimensional, resizable and responsive lists](https://github.com/hootsuite/grid)\n- [Notie - a clean and simple notification, input, and selection suite for javascript](https://github.com/jaredreich/notie)\n- [Slick - 轮播支持PC和Mobile](https://github.com/kenwheeler/slick/)\n\n\n## Animate javaScript/CSS3\n- [granim.js - 渐变动画/颜色/图片](https://github.com/sarcadass/granim.js)\n- [anime.js](https://github.com/juliangarnier/anime)\n- [shape-shifter](https://github.com/kennethcachia/shape-shifter)\n- [led - canvas粒子文字插件](https://github.com/lixinliang/led)\n- [ScrollReveal - 滚动显示动画](https://scrollrevealjs.org/)\n- [bounce.js](https://github.com/tictail/bounce.js)\n\n***\n\n\n## 移动端\n- [lib.flexible - 移动端自适应方案](https://github.com/amfe/lib-flexible)\n- [FastClick - 解决移动端浏览器 300 毫秒点击延迟问题](https://github.com/ftlabs/fastclick)\n- [noclickdelay.js - 取消移动设备上click事件的300毫秒延迟](https://github.com/baijunjie/noclickdelay.js)\n- [AlloyTouch - 腾讯AlloyTeam移动Web触摸解决方案](https://github.com/AlloyTeam/AlloyTouch/blob/master/README_CN.md)\n- [AlloyFinger - 多点触摸手势库](https://github.com/AlloyTeam/AlloyFinger)\n\n\n\n***\n\n\n## 微信小程序\n- [Wafer - 企业级微信小程序全栈方案](https://github.com/tencentyun/wafer)\n- [小相册](https://github.com/CFETeam/weapp-demo-album)\n- [地图定位](https://github.com/giscafer/wechat-weapp-mapdemo)\n- [豆瓣电影](https://github.com/zce/weapp-demo)\n- [购物车](https://github.com/SeptemberMaples/wechat-weapp-demo)\n- [番茄时钟](https://github.com/kraaas/timer)\n- [手机QQ](https://github.com/xiehui999/SmallAppForQQ)\n- [知乎日报](https://github.com/LiuCaiHe/wechat-app-sample)\n- [Apple Music](https://github.com/Sioxas/AppleMusic)\n- [wechat-app-music](https://github.com/eyasliu/wechat-app-music)\n- [We重邮 - 微信小程序](https://github.com/lanshan-studio/wecqupt)\n- [wxapp-cli - 微信小程序脚手架](https://github.com/MeCKodo/wxapp-cli)\n\n***\n\n## Vue.js\n- [Vue.js 2.0中文文档](https://vuefe.cn/v2/guide/)\n- [Vuex - 状态管理模式](https://vuex.vuejs.org/zh-cn/intro.html)\n- [vue-router2 - 路由](https://router.vuejs.org/zh-cn/)\n- [vue-amap - 基于Vue2.0和高德地图的地图组件](https://github.com/ElemeFE/vue-amap)\n- [mint-ui - Mobile UI elements for Vue.js](https://github.com/ElemeFE/mint-ui)\n- [element - A Vue.js 2.0 UI Toolkit for Web](https://github.com/ElemeFE/element)\n- [jackblog - vue 版个人博客系统](https://github.com/jackhutu/jackblog-vue)\n- [vux - 基于WeUI和Vue(2.x)开发的移动端UI组件库，主要服务于微信页面](https://github.com/airyland/vux)\n- [VueStar - 点赞动画组件](https://github.com/OYsun/VueStar)\n- [NeteaseCloudWebApp - 网易云音乐](https://github.com/javaSwing/NeteaseCloudWebApp)\n- [vue-ssr - vue服务端渲染模板](https://github.com/ccforward/vue-ssr)\n- [vue2-elm](https://github.com/bailicangdu/vue2-elm)\n\n\n***\n\n\n## JSON Data\n- [微票bannerList](http://json.bmbstack.com/bannerList)\n- [微票playingList](http://json.bmbstack.com/playingList)\n- [微票cinemaList](http://json.bmbstack.com/cinemaList)\n- [知乎日报](https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90)\n- [AD's API](https://api.imjad.cn/)\n\n\n***\n\n## 效率工具\n- [bourbon - A Lightweight Sass Tool Set](https://github.com/thoughtbot/bourbon)\n- [css3 cubic-bezier - 在线生成](http://cubic-bezier.com/)\n- [css3 tools - css3动画工具](https://isux.tencent.com/css3/tools.html)\n- [CSS3 Tool](http://westciv.com/tools/gradients/)\n- [spy-debugger - 微信调试，各种WebView样式调试、手机浏览器的页面真机调试](https://github.com/wuchangming/spy-debugger)\n- [cooking - 基于 webapck 但更友好的配置项、易用的扩展配置机制](http://elemefe.github.io/cooking/)\n\n\n## 前端构建脚手架\n- [webpack-seed - 基于webpack搭建纯静态页面型前端工程解决方案模板](https://github.com/chemdemo/webpack-seed)\n- [Webpack-Vue-MultiplePage - 在多页面项目下使用 Webpack + Vue](https://github.com/cnu4/Webpack-Vue-MultiplePage)\n- [jarvan4dev/vue-multi-page - 基于vue-cli脚手架修改而成的多页面(非SPA)项目脚手架](https://github.com/jarvan4dev/vue-multi-page)\n- [cooking-demo/multiple-pages-vue - Vue 2 + webpack 2 多页面例子](https://github.com/cooking-demo/multiple-pages-vue)\n- [cooking-demo/simple - vue2+webpack2单页面](https://github.com/cooking-demo/simple)\n- [fis3-base - 基于fis3的纯前端解决方案](https://github.com/yanhaijing/fis3-base)\n","updated":"2017-02-28T08:59:32.422Z","path":"src/index.html","comments":1,"layout":"page","_id":"cj0bzqxm10007acajtpedjylr","content":"<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><ul>\n<li><a href=\"https://github.com/necolas/normalize.css\" target=\"_blank\" rel=\"external\">normalize.css</a></li>\n</ul>\n<p><strong>CSS grid</strong></p>\n<ul>\n<li><a href=\"https://github.com/thoughtbot/neat\" target=\"_blank\" rel=\"external\">neat - A lightweight semantic grid framework built with Sass</a></li>\n<li><a href=\"https://github.com/kumailht/gridforms/\" target=\"_blank\" rel=\"external\">Gridforms - 网格表单</a></li>\n<li><a href=\"http://daneden.github.io/Toast/\" target=\"_blank\" rel=\"external\">TOAST - Insane, no-nonsense CSS grid</a></li>\n</ul>\n<p><strong>Animate</strong></p>\n<ul>\n<li><a href=\"https://github.com/h5bp/Effeckt.css\" target=\"_blank\" rel=\"external\">Effeckt.css - 动画库:modal,button,list,tab…</a></li>\n<li><a href=\"http://tridiv.com/\" target=\"_blank\" rel=\"external\">Tridiv - Creating 3D shapes in CSS </a></li>\n<li><a href=\"https://github.com/daneden/animate.css\" target=\"_blank\" rel=\"external\">animate.css</a></li>\n<li><a href=\"http://www.minimamente.com/example/magic_animations/\" target=\"_blank\" rel=\"external\">magic animations</a></li>\n<li><a href=\"http://h5bp.github.io/Effeckt.css/\" target=\"_blank\" rel=\"external\">Effeckt</a></li>\n<li><a href=\"https://github.com/IanLunn/Hover\" target=\"_blank\" rel=\"external\">Hover</a></li>\n<li><a href=\"https://github.com/gudh/ihover\" target=\"_blank\" rel=\"external\">ihover</a></li>\n<li><a href=\"https://github.com/MatejKustec/SpinThatShit\" target=\"_blank\" rel=\"external\">SpinThatShit - CSSloader</a></li>\n<li><a href=\"https://github.com/ConnorAtherton/loaders.css\" target=\"_blank\" rel=\"external\">loaders.css</a></li>\n<li><a href=\"https://github.com/lukehaas/css-loaders\" target=\"_blank\" rel=\"external\">css-loaders</a></li>\n<li><a href=\"https://boguz.github.io/Spinners/\" target=\"_blank\" rel=\"external\">SPINNERS - HTML and CSS “loading icon” animations</a></li>\n<li><a href=\"https://github.com/webkul/csspin\" target=\"_blank\" rel=\"external\">csspin - CSS Spinners and Loaders</a></li>\n<li><a href=\"https://github.com/elrumordelaluz/csshake\" target=\"_blank\" rel=\"external\">csshake - Some CSS classes to move your DOM</a></li>\n<li><a href=\"https://github.com/miniMAC/rocket\" target=\"_blank\" rel=\"external\">Rocket - Rocket create an animation from two items via jQuery</a></li>\n<li><a href=\"https://github.com/bendc/animateplus\" target=\"_blank\" rel=\"external\">Animate Plus - CSS and SVG animation library</a></li>\n<li><a href=\"http://textillate.js.org/\" target=\"_blank\" rel=\"external\">textillate.js - CSS3 text animations</a></li>\n<li><a href=\"https://github.com/legomushroom/mojs\" target=\"_blank\" rel=\"external\">mojs - 图形运动动画</a></li>\n</ul>\n<p><strong>Framework</strong></p>\n<ul>\n<li><a href=\"https://github.com/yahoo/pure\" target=\"_blank\" rel=\"external\">Pure - A set of small, responsive CSS modules</a></li>\n<li><a href=\"https://github.com/dogfalo/materialize/\" target=\"_blank\" rel=\"external\">materialize - Materialize, a CSS Framework based on Material Design</a></li>\n<li><a href=\"https://github.com/jgthms/bulma\" target=\"_blank\" rel=\"external\">Bulma - A modern CSS framework based on Flexbox</a></li>\n<li><a href=\"http://bootflat.github.io/index.html\" target=\"_blank\" rel=\"external\">bootflat-Flat UI KIT based on Bootstrap 3.3.0 CSS framework</a></li>\n<li><a href=\"https://github.com/muicss/mui\" target=\"_blank\" rel=\"external\">mui-Material Design CSS Framework</a></li>\n<li><a href=\"http://www.flexboxpatterns.com/home\" target=\"_blank\" rel=\"external\">Flexbox Patterns - Build awesome user interfaces with CSS flexbox</a></li>\n<li><a href=\"http://pintsize.io/examples\" target=\"_blank\" rel=\"external\">Pintsize-Super flexbox</a></li>\n<li><a href=\"https://github.com/picnicss/picnic\" target=\"_blank\" rel=\"external\">picnic</a></li>\n<li><a href=\"https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template\" target=\"_blank\" rel=\"external\">CoreUI-Free-Bootstrap-Admin-Template</a></li>\n<li><a href=\"https://almsaeedstudio.com/\" target=\"_blank\" rel=\"external\">AdminLTE Control Panel Template</a></li>\n<li><a href=\"http://refills.bourbon.io/\" target=\"_blank\" rel=\"external\">Refills - Components and patterns built with Bourbon and Neat</a></li>\n</ul>\n<p><strong>Flexbox</strong></p>\n<ul>\n<li><a href=\"http://flexboxgrid.com/\" target=\"_blank\" rel=\"external\">Flexbox Grid - flexbox布局框架</a></li>\n<li><a href=\"http://www.flexboxpatterns.com/home\" target=\"_blank\" rel=\"external\">Flexbox Patterns</a></li>\n<li><a href=\"https://github.com/philipwalton/solved-by-flexbox\" target=\"_blank\" rel=\"external\">solved-by-flexbox</a></li>\n<li><a href=\"https://jonathantneal.github.io/flexibility/\" target=\"_blank\" rel=\"external\">Flexibility - 各属性在线演示</a></li>\n<li><a href=\"http://bennettfeely.com/flexplorer/\" target=\"_blank\" rel=\"external\">flexplorer - 布局</a></li>\n<li><a href=\"http://codepen.io/enxaneta/full/adLPwv/\" target=\"_blank\" rel=\"external\">Properties for the flex container - 各种示例</a></li>\n</ul>\n<p><strong>Components</strong></p>\n<ul>\n<li><a href=\"https://github.com/afeld/emoji-css\" target=\"_blank\" rel=\"external\">emoji-css</a></li>\n<li><a href=\"https://github.com/flatlogic/awesome-bootstrap-checkbox\" target=\"_blank\" rel=\"external\">awesome-bootstrap-checkbox</a></li>\n<li><a href=\"https://github.com/ghinda/css-toggle-switch\" target=\"_blank\" rel=\"external\">css-toggle-switch</a></li>\n<li><a href=\"http://www.cssflow.com/snippets/simple-toggle-switch/demo\" target=\"_blank\" rel=\"external\">simple-toggle-switch</a></li>\n</ul>\n<p><strong>Utils</strong></p>\n<ul>\n<li><a href=\"https://github.com/marvelapp/devices.css\" target=\"_blank\" rel=\"external\">devices.css - CSS (Mostly) Flat Mobile Devices</a></li>\n</ul>\n<hr>\n<h2 id=\"Font-Icons\"><a href=\"#Font-Icons\" class=\"headerlink\" title=\"Font Icons\"></a>Font Icons</h2><ul>\n<li><a href=\"http://fontawesome.io/\" target=\"_blank\" rel=\"external\">Font Awesome</a></li>\n<li><a href=\"http://ionicons.com/\" target=\"_blank\" rel=\"external\">ionicons</a></li>\n<li><a href=\"https://material.io/icons/\" target=\"_blank\" rel=\"external\">Material icons</a></li>\n<li><a href=\"http://www.iconfont.cn/plus\" target=\"_blank\" rel=\"external\">Iconfont - 阿里巴巴矢量图标库</a></li>\n</ul>\n<hr>\n<h2 id=\"javaScript\"><a href=\"#javaScript\" class=\"headerlink\" title=\"javaScript\"></a>javaScript</h2><ul>\n<li><a href=\"https://github.com/matthewhudson/device.js\" target=\"_blank\" rel=\"external\">Device.js - 设备判断 iOS, Android | Portrait vs. Landscape | Tablet vs. Mobile</a></li>\n<li><a href=\"https://github.com/zenorocha/clipboard.js/\" target=\"_blank\" rel=\"external\">Clipboard.js - Copy to clipboard.No Flash</a></li>\n<li><a href=\"https://github.com/briangonzalez/jquery.adaptive-backgrounds.js\" target=\"_blank\" rel=\"external\">jquery.adaptive - backgrounds-提取图片颜色并作为背景色显示</a></li>\n<li><a href=\"https://github.com/toubou91/percircle\" target=\"_blank\" rel=\"external\">Percircle-CSS percentage circle built with jQuery</a></li>\n<li><a href=\"https://github.com/walmik/timer.jquery\" target=\"_blank\" rel=\"external\">jQuery Timer: Start/Stop/Resume/Remove</a></li>\n<li><a href=\"https://github.com/wimbarelds/TimeCircles\" target=\"_blank\" rel=\"external\">TimeCircles</a></li>\n<li><a href=\"http://loudev.com/\" target=\"_blank\" rel=\"external\">Multi-select</a></li>\n<li><a href=\"https://github.com/VuongN/jQuery-Fakecrop\" target=\"_blank\" rel=\"external\">Fakecrop - Resize and crop bigger images and elements inside a container element</a></li>\n<li><a href=\"https://github.com/pakcheong/jqthumb\" target=\"_blank\" rel=\"external\">jQThumb - 按比例显示缩略图</a></li>\n<li><a href=\"https://github.com/usablica/intro.js\" target=\"_blank\" rel=\"external\">Intro.js - Introductions for websites and features with a step-by-step guide</a></li>\n<li><a href=\"https://github.com/Wisembly/basil.js\" target=\"_blank\" rel=\"external\">Basil.js - Unified localstorage, cookie and session storage JavaScript API</a></li>\n<li><a href=\"https://github.com/localForage/localForage\" target=\"_blank\" rel=\"external\">LocalForage - localForage is a fast and simple storage library for JavaScript</a></li>\n<li><a href=\"https://github.com/WQTeam/web-storage-cache\" target=\"_blank\" rel=\"external\">WebStorageCache - 对localStorage 和sessionStorage 进行了扩展，添加了超时时间，序列化方法</a></li>\n<li><a href=\"https://github.com/hootsuite/grid\" target=\"_blank\" rel=\"external\">GridList - Drag and drop library for two-dimensional, resizable and responsive lists</a></li>\n<li><a href=\"https://github.com/jaredreich/notie\" target=\"_blank\" rel=\"external\">Notie - a clean and simple notification, input, and selection suite for javascript</a></li>\n<li><a href=\"https://github.com/kenwheeler/slick/\" target=\"_blank\" rel=\"external\">Slick - 轮播支持PC和Mobile</a></li>\n</ul>\n<h2 id=\"Animate-javaScript-CSS3\"><a href=\"#Animate-javaScript-CSS3\" class=\"headerlink\" title=\"Animate javaScript/CSS3\"></a>Animate javaScript/CSS3</h2><ul>\n<li><a href=\"https://github.com/sarcadass/granim.js\" target=\"_blank\" rel=\"external\">granim.js - 渐变动画/颜色/图片</a></li>\n<li><a href=\"https://github.com/juliangarnier/anime\" target=\"_blank\" rel=\"external\">anime.js</a></li>\n<li><a href=\"https://github.com/kennethcachia/shape-shifter\" target=\"_blank\" rel=\"external\">shape-shifter</a></li>\n<li><a href=\"https://github.com/lixinliang/led\" target=\"_blank\" rel=\"external\">led - canvas粒子文字插件</a></li>\n<li><a href=\"https://scrollrevealjs.org/\" target=\"_blank\" rel=\"external\">ScrollReveal - 滚动显示动画</a></li>\n<li><a href=\"https://github.com/tictail/bounce.js\" target=\"_blank\" rel=\"external\">bounce.js</a></li>\n</ul>\n<hr>\n<h2 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h2><ul>\n<li><a href=\"https://github.com/amfe/lib-flexible\" target=\"_blank\" rel=\"external\">lib.flexible - 移动端自适应方案</a></li>\n<li><a href=\"https://github.com/ftlabs/fastclick\" target=\"_blank\" rel=\"external\">FastClick - 解决移动端浏览器 300 毫秒点击延迟问题</a></li>\n<li><a href=\"https://github.com/baijunjie/noclickdelay.js\" target=\"_blank\" rel=\"external\">noclickdelay.js - 取消移动设备上click事件的300毫秒延迟</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyTouch/blob/master/README_CN.md\" target=\"_blank\" rel=\"external\">AlloyTouch - 腾讯AlloyTeam移动Web触摸解决方案</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyFinger\" target=\"_blank\" rel=\"external\">AlloyFinger - 多点触摸手势库</a></li>\n</ul>\n<hr>\n<h2 id=\"微信小程序\"><a href=\"#微信小程序\" class=\"headerlink\" title=\"微信小程序\"></a>微信小程序</h2><ul>\n<li><a href=\"https://github.com/tencentyun/wafer\" target=\"_blank\" rel=\"external\">Wafer - 企业级微信小程序全栈方案</a></li>\n<li><a href=\"https://github.com/CFETeam/weapp-demo-album\" target=\"_blank\" rel=\"external\">小相册</a></li>\n<li><a href=\"https://github.com/giscafer/wechat-weapp-mapdemo\" target=\"_blank\" rel=\"external\">地图定位</a></li>\n<li><a href=\"https://github.com/zce/weapp-demo\" target=\"_blank\" rel=\"external\">豆瓣电影</a></li>\n<li><a href=\"https://github.com/SeptemberMaples/wechat-weapp-demo\" target=\"_blank\" rel=\"external\">购物车</a></li>\n<li><a href=\"https://github.com/kraaas/timer\" target=\"_blank\" rel=\"external\">番茄时钟</a></li>\n<li><a href=\"https://github.com/xiehui999/SmallAppForQQ\" target=\"_blank\" rel=\"external\">手机QQ</a></li>\n<li><a href=\"https://github.com/LiuCaiHe/wechat-app-sample\" target=\"_blank\" rel=\"external\">知乎日报</a></li>\n<li><a href=\"https://github.com/Sioxas/AppleMusic\" target=\"_blank\" rel=\"external\">Apple Music</a></li>\n<li><a href=\"https://github.com/eyasliu/wechat-app-music\" target=\"_blank\" rel=\"external\">wechat-app-music</a></li>\n<li><a href=\"https://github.com/lanshan-studio/wecqupt\" target=\"_blank\" rel=\"external\">We重邮 - 微信小程序</a></li>\n<li><a href=\"https://github.com/MeCKodo/wxapp-cli\" target=\"_blank\" rel=\"external\">wxapp-cli - 微信小程序脚手架</a></li>\n</ul>\n<hr>\n<h2 id=\"Vue-js\"><a href=\"#Vue-js\" class=\"headerlink\" title=\"Vue.js\"></a>Vue.js</h2><ul>\n<li><a href=\"https://vuefe.cn/v2/guide/\" target=\"_blank\" rel=\"external\">Vue.js 2.0中文文档</a></li>\n<li><a href=\"https://vuex.vuejs.org/zh-cn/intro.html\" target=\"_blank\" rel=\"external\">Vuex - 状态管理模式</a></li>\n<li><a href=\"https://router.vuejs.org/zh-cn/\" target=\"_blank\" rel=\"external\">vue-router2 - 路由</a></li>\n<li><a href=\"https://github.com/ElemeFE/vue-amap\" target=\"_blank\" rel=\"external\">vue-amap - 基于Vue2.0和高德地图的地图组件</a></li>\n<li><a href=\"https://github.com/ElemeFE/mint-ui\" target=\"_blank\" rel=\"external\">mint-ui - Mobile UI elements for Vue.js</a></li>\n<li><a href=\"https://github.com/ElemeFE/element\" target=\"_blank\" rel=\"external\">element - A Vue.js 2.0 UI Toolkit for Web</a></li>\n<li><a href=\"https://github.com/jackhutu/jackblog-vue\" target=\"_blank\" rel=\"external\">jackblog - vue 版个人博客系统</a></li>\n<li><a href=\"https://github.com/airyland/vux\" target=\"_blank\" rel=\"external\">vux - 基于WeUI和Vue(2.x)开发的移动端UI组件库，主要服务于微信页面</a></li>\n<li><a href=\"https://github.com/OYsun/VueStar\" target=\"_blank\" rel=\"external\">VueStar - 点赞动画组件</a></li>\n<li><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\" target=\"_blank\" rel=\"external\">NeteaseCloudWebApp - 网易云音乐</a></li>\n<li><a href=\"https://github.com/ccforward/vue-ssr\" target=\"_blank\" rel=\"external\">vue-ssr - vue服务端渲染模板</a></li>\n<li><a href=\"https://github.com/bailicangdu/vue2-elm\" target=\"_blank\" rel=\"external\">vue2-elm</a></li>\n</ul>\n<hr>\n<h2 id=\"JSON-Data\"><a href=\"#JSON-Data\" class=\"headerlink\" title=\"JSON Data\"></a>JSON Data</h2><ul>\n<li><a href=\"http://json.bmbstack.com/bannerList\" target=\"_blank\" rel=\"external\">微票bannerList</a></li>\n<li><a href=\"http://json.bmbstack.com/playingList\" target=\"_blank\" rel=\"external\">微票playingList</a></li>\n<li><a href=\"http://json.bmbstack.com/cinemaList\" target=\"_blank\" rel=\"external\">微票cinemaList</a></li>\n<li><a href=\"https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90\" target=\"_blank\" rel=\"external\">知乎日报</a></li>\n<li><a href=\"https://api.imjad.cn/\" target=\"_blank\" rel=\"external\">AD’s API</a></li>\n</ul>\n<hr>\n<h2 id=\"效率工具\"><a href=\"#效率工具\" class=\"headerlink\" title=\"效率工具\"></a>效率工具</h2><ul>\n<li><a href=\"https://github.com/thoughtbot/bourbon\" target=\"_blank\" rel=\"external\">bourbon - A Lightweight Sass Tool Set</a></li>\n<li><a href=\"http://cubic-bezier.com/\" target=\"_blank\" rel=\"external\">css3 cubic-bezier - 在线生成</a></li>\n<li><a href=\"https://isux.tencent.com/css3/tools.html\" target=\"_blank\" rel=\"external\">css3 tools - css3动画工具</a></li>\n<li><a href=\"http://westciv.com/tools/gradients/\" target=\"_blank\" rel=\"external\">CSS3 Tool</a></li>\n<li><a href=\"https://github.com/wuchangming/spy-debugger\" target=\"_blank\" rel=\"external\">spy-debugger - 微信调试，各种WebView样式调试、手机浏览器的页面真机调试</a></li>\n<li><a href=\"http://elemefe.github.io/cooking/\" target=\"_blank\" rel=\"external\">cooking - 基于 webapck 但更友好的配置项、易用的扩展配置机制</a></li>\n</ul>\n<h2 id=\"前端构建脚手架\"><a href=\"#前端构建脚手架\" class=\"headerlink\" title=\"前端构建脚手架\"></a>前端构建脚手架</h2><ul>\n<li><a href=\"https://github.com/chemdemo/webpack-seed\" target=\"_blank\" rel=\"external\">webpack-seed - 基于webpack搭建纯静态页面型前端工程解决方案模板</a></li>\n<li><a href=\"https://github.com/cnu4/Webpack-Vue-MultiplePage\" target=\"_blank\" rel=\"external\">Webpack-Vue-MultiplePage - 在多页面项目下使用 Webpack + Vue</a></li>\n<li><a href=\"https://github.com/jarvan4dev/vue-multi-page\" target=\"_blank\" rel=\"external\">jarvan4dev/vue-multi-page - 基于vue-cli脚手架修改而成的多页面(非SPA)项目脚手架</a></li>\n<li><a href=\"https://github.com/cooking-demo/multiple-pages-vue\" target=\"_blank\" rel=\"external\">cooking-demo/multiple-pages-vue - Vue 2 + webpack 2 多页面例子</a></li>\n<li><a href=\"https://github.com/cooking-demo/simple\" target=\"_blank\" rel=\"external\">cooking-demo/simple - vue2+webpack2单页面</a></li>\n<li><a href=\"https://github.com/yanhaijing/fis3-base\" target=\"_blank\" rel=\"external\">fis3-base - 基于fis3的纯前端解决方案</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><ul>\n<li><a href=\"https://github.com/necolas/normalize.css\">normalize.css</a></li>\n</ul>\n<p><strong>CSS grid</strong></p>\n<ul>\n<li><a href=\"https://github.com/thoughtbot/neat\">neat - A lightweight semantic grid framework built with Sass</a></li>\n<li><a href=\"https://github.com/kumailht/gridforms/\">Gridforms - 网格表单</a></li>\n<li><a href=\"http://daneden.github.io/Toast/\">TOAST - Insane, no-nonsense CSS grid</a></li>\n</ul>\n<p><strong>Animate</strong></p>\n<ul>\n<li><a href=\"https://github.com/h5bp/Effeckt.css\">Effeckt.css - 动画库:modal,button,list,tab…</a></li>\n<li><a href=\"http://tridiv.com/\">Tridiv - Creating 3D shapes in CSS </a></li>\n<li><a href=\"https://github.com/daneden/animate.css\">animate.css</a></li>\n<li><a href=\"http://www.minimamente.com/example/magic_animations/\">magic animations</a></li>\n<li><a href=\"http://h5bp.github.io/Effeckt.css/\">Effeckt</a></li>\n<li><a href=\"https://github.com/IanLunn/Hover\">Hover</a></li>\n<li><a href=\"https://github.com/gudh/ihover\">ihover</a></li>\n<li><a href=\"https://github.com/MatejKustec/SpinThatShit\">SpinThatShit - CSSloader</a></li>\n<li><a href=\"https://github.com/ConnorAtherton/loaders.css\">loaders.css</a></li>\n<li><a href=\"https://github.com/lukehaas/css-loaders\">css-loaders</a></li>\n<li><a href=\"https://boguz.github.io/Spinners/\">SPINNERS - HTML and CSS “loading icon” animations</a></li>\n<li><a href=\"https://github.com/webkul/csspin\">csspin - CSS Spinners and Loaders</a></li>\n<li><a href=\"https://github.com/elrumordelaluz/csshake\">csshake - Some CSS classes to move your DOM</a></li>\n<li><a href=\"https://github.com/miniMAC/rocket\">Rocket - Rocket create an animation from two items via jQuery</a></li>\n<li><a href=\"https://github.com/bendc/animateplus\">Animate Plus - CSS and SVG animation library</a></li>\n<li><a href=\"http://textillate.js.org/\">textillate.js - CSS3 text animations</a></li>\n<li><a href=\"https://github.com/legomushroom/mojs\">mojs - 图形运动动画</a></li>\n</ul>\n<p><strong>Framework</strong></p>\n<ul>\n<li><a href=\"https://github.com/yahoo/pure\">Pure - A set of small, responsive CSS modules</a></li>\n<li><a href=\"https://github.com/dogfalo/materialize/\">materialize - Materialize, a CSS Framework based on Material Design</a></li>\n<li><a href=\"https://github.com/jgthms/bulma\">Bulma - A modern CSS framework based on Flexbox</a></li>\n<li><a href=\"http://bootflat.github.io/index.html\">bootflat-Flat UI KIT based on Bootstrap 3.3.0 CSS framework</a></li>\n<li><a href=\"https://github.com/muicss/mui\">mui-Material Design CSS Framework</a></li>\n<li><a href=\"http://www.flexboxpatterns.com/home\">Flexbox Patterns - Build awesome user interfaces with CSS flexbox</a></li>\n<li><a href=\"http://pintsize.io/examples\">Pintsize-Super flexbox</a></li>\n<li><a href=\"https://github.com/picnicss/picnic\">picnic</a></li>\n<li><a href=\"https://github.com/mrholek/CoreUI-Free-Bootstrap-Admin-Template\">CoreUI-Free-Bootstrap-Admin-Template</a></li>\n<li><a href=\"https://almsaeedstudio.com/\">AdminLTE Control Panel Template</a></li>\n<li><a href=\"http://refills.bourbon.io/\">Refills - Components and patterns built with Bourbon and Neat</a></li>\n</ul>\n<p><strong>Flexbox</strong></p>\n<ul>\n<li><a href=\"http://flexboxgrid.com/\">Flexbox Grid - flexbox布局框架</a></li>\n<li><a href=\"http://www.flexboxpatterns.com/home\">Flexbox Patterns</a></li>\n<li><a href=\"https://github.com/philipwalton/solved-by-flexbox\">solved-by-flexbox</a></li>\n<li><a href=\"https://jonathantneal.github.io/flexibility/\">Flexibility - 各属性在线演示</a></li>\n<li><a href=\"http://bennettfeely.com/flexplorer/\">flexplorer - 布局</a></li>\n<li><a href=\"http://codepen.io/enxaneta/full/adLPwv/\">Properties for the flex container - 各种示例</a></li>\n</ul>\n<p><strong>Components</strong></p>\n<ul>\n<li><a href=\"https://github.com/afeld/emoji-css\">emoji-css</a></li>\n<li><a href=\"https://github.com/flatlogic/awesome-bootstrap-checkbox\">awesome-bootstrap-checkbox</a></li>\n<li><a href=\"https://github.com/ghinda/css-toggle-switch\">css-toggle-switch</a></li>\n<li><a href=\"http://www.cssflow.com/snippets/simple-toggle-switch/demo\">simple-toggle-switch</a></li>\n</ul>\n<p><strong>Utils</strong></p>\n<ul>\n<li><a href=\"https://github.com/marvelapp/devices.css\">devices.css - CSS (Mostly) Flat Mobile Devices</a></li>\n</ul>\n<hr>\n<h2 id=\"Font-Icons\"><a href=\"#Font-Icons\" class=\"headerlink\" title=\"Font Icons\"></a>Font Icons</h2><ul>\n<li><a href=\"http://fontawesome.io/\">Font Awesome</a></li>\n<li><a href=\"http://ionicons.com/\">ionicons</a></li>\n<li><a href=\"https://material.io/icons/\">Material icons</a></li>\n<li><a href=\"http://www.iconfont.cn/plus\">Iconfont - 阿里巴巴矢量图标库</a></li>\n</ul>\n<hr>\n<h2 id=\"javaScript\"><a href=\"#javaScript\" class=\"headerlink\" title=\"javaScript\"></a>javaScript</h2><ul>\n<li><a href=\"https://github.com/matthewhudson/device.js\">Device.js - 设备判断 iOS, Android | Portrait vs. Landscape | Tablet vs. Mobile</a></li>\n<li><a href=\"https://github.com/zenorocha/clipboard.js/\">Clipboard.js - Copy to clipboard.No Flash</a></li>\n<li><a href=\"https://github.com/briangonzalez/jquery.adaptive-backgrounds.js\">jquery.adaptive - backgrounds-提取图片颜色并作为背景色显示</a></li>\n<li><a href=\"https://github.com/toubou91/percircle\">Percircle-CSS percentage circle built with jQuery</a></li>\n<li><a href=\"https://github.com/walmik/timer.jquery\">jQuery Timer: Start/Stop/Resume/Remove</a></li>\n<li><a href=\"https://github.com/wimbarelds/TimeCircles\">TimeCircles</a></li>\n<li><a href=\"http://loudev.com/\">Multi-select</a></li>\n<li><a href=\"https://github.com/VuongN/jQuery-Fakecrop\">Fakecrop - Resize and crop bigger images and elements inside a container element</a></li>\n<li><a href=\"https://github.com/pakcheong/jqthumb\">jQThumb - 按比例显示缩略图</a></li>\n<li><a href=\"https://github.com/usablica/intro.js\">Intro.js - Introductions for websites and features with a step-by-step guide</a></li>\n<li><a href=\"https://github.com/Wisembly/basil.js\">Basil.js - Unified localstorage, cookie and session storage JavaScript API</a></li>\n<li><a href=\"https://github.com/localForage/localForage\">LocalForage - localForage is a fast and simple storage library for JavaScript</a></li>\n<li><a href=\"https://github.com/WQTeam/web-storage-cache\">WebStorageCache - 对localStorage 和sessionStorage 进行了扩展，添加了超时时间，序列化方法</a></li>\n<li><a href=\"https://github.com/hootsuite/grid\">GridList - Drag and drop library for two-dimensional, resizable and responsive lists</a></li>\n<li><a href=\"https://github.com/jaredreich/notie\">Notie - a clean and simple notification, input, and selection suite for javascript</a></li>\n<li><a href=\"https://github.com/kenwheeler/slick/\">Slick - 轮播支持PC和Mobile</a></li>\n</ul>\n<h2 id=\"Animate-javaScript-CSS3\"><a href=\"#Animate-javaScript-CSS3\" class=\"headerlink\" title=\"Animate javaScript/CSS3\"></a>Animate javaScript/CSS3</h2><ul>\n<li><a href=\"https://github.com/sarcadass/granim.js\">granim.js - 渐变动画/颜色/图片</a></li>\n<li><a href=\"https://github.com/juliangarnier/anime\">anime.js</a></li>\n<li><a href=\"https://github.com/kennethcachia/shape-shifter\">shape-shifter</a></li>\n<li><a href=\"https://github.com/lixinliang/led\">led - canvas粒子文字插件</a></li>\n<li><a href=\"https://scrollrevealjs.org/\">ScrollReveal - 滚动显示动画</a></li>\n<li><a href=\"https://github.com/tictail/bounce.js\">bounce.js</a></li>\n</ul>\n<hr>\n<h2 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h2><ul>\n<li><a href=\"https://github.com/amfe/lib-flexible\">lib.flexible - 移动端自适应方案</a></li>\n<li><a href=\"https://github.com/ftlabs/fastclick\">FastClick - 解决移动端浏览器 300 毫秒点击延迟问题</a></li>\n<li><a href=\"https://github.com/baijunjie/noclickdelay.js\">noclickdelay.js - 取消移动设备上click事件的300毫秒延迟</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyTouch/blob/master/README_CN.md\">AlloyTouch - 腾讯AlloyTeam移动Web触摸解决方案</a></li>\n<li><a href=\"https://github.com/AlloyTeam/AlloyFinger\">AlloyFinger - 多点触摸手势库</a></li>\n</ul>\n<hr>\n<h2 id=\"微信小程序\"><a href=\"#微信小程序\" class=\"headerlink\" title=\"微信小程序\"></a>微信小程序</h2><ul>\n<li><a href=\"https://github.com/tencentyun/wafer\">Wafer - 企业级微信小程序全栈方案</a></li>\n<li><a href=\"https://github.com/CFETeam/weapp-demo-album\">小相册</a></li>\n<li><a href=\"https://github.com/giscafer/wechat-weapp-mapdemo\">地图定位</a></li>\n<li><a href=\"https://github.com/zce/weapp-demo\">豆瓣电影</a></li>\n<li><a href=\"https://github.com/SeptemberMaples/wechat-weapp-demo\">购物车</a></li>\n<li><a href=\"https://github.com/kraaas/timer\">番茄时钟</a></li>\n<li><a href=\"https://github.com/xiehui999/SmallAppForQQ\">手机QQ</a></li>\n<li><a href=\"https://github.com/LiuCaiHe/wechat-app-sample\">知乎日报</a></li>\n<li><a href=\"https://github.com/Sioxas/AppleMusic\">Apple Music</a></li>\n<li><a href=\"https://github.com/eyasliu/wechat-app-music\">wechat-app-music</a></li>\n<li><a href=\"https://github.com/lanshan-studio/wecqupt\">We重邮 - 微信小程序</a></li>\n<li><a href=\"https://github.com/MeCKodo/wxapp-cli\">wxapp-cli - 微信小程序脚手架</a></li>\n</ul>\n<hr>\n<h2 id=\"Vue-js\"><a href=\"#Vue-js\" class=\"headerlink\" title=\"Vue.js\"></a>Vue.js</h2><ul>\n<li><a href=\"https://vuefe.cn/v2/guide/\">Vue.js 2.0中文文档</a></li>\n<li><a href=\"https://vuex.vuejs.org/zh-cn/intro.html\">Vuex - 状态管理模式</a></li>\n<li><a href=\"https://router.vuejs.org/zh-cn/\">vue-router2 - 路由</a></li>\n<li><a href=\"https://github.com/ElemeFE/vue-amap\">vue-amap - 基于Vue2.0和高德地图的地图组件</a></li>\n<li><a href=\"https://github.com/ElemeFE/mint-ui\">mint-ui - Mobile UI elements for Vue.js</a></li>\n<li><a href=\"https://github.com/ElemeFE/element\">element - A Vue.js 2.0 UI Toolkit for Web</a></li>\n<li><a href=\"https://github.com/jackhutu/jackblog-vue\">jackblog - vue 版个人博客系统</a></li>\n<li><a href=\"https://github.com/airyland/vux\">vux - 基于WeUI和Vue(2.x)开发的移动端UI组件库，主要服务于微信页面</a></li>\n<li><a href=\"https://github.com/OYsun/VueStar\">VueStar - 点赞动画组件</a></li>\n<li><a href=\"https://github.com/javaSwing/NeteaseCloudWebApp\">NeteaseCloudWebApp - 网易云音乐</a></li>\n<li><a href=\"https://github.com/ccforward/vue-ssr\">vue-ssr - vue服务端渲染模板</a></li>\n<li><a href=\"https://github.com/bailicangdu/vue2-elm\">vue2-elm</a></li>\n</ul>\n<hr>\n<h2 id=\"JSON-Data\"><a href=\"#JSON-Data\" class=\"headerlink\" title=\"JSON Data\"></a>JSON Data</h2><ul>\n<li><a href=\"http://json.bmbstack.com/bannerList\">微票bannerList</a></li>\n<li><a href=\"http://json.bmbstack.com/playingList\">微票playingList</a></li>\n<li><a href=\"http://json.bmbstack.com/cinemaList\">微票cinemaList</a></li>\n<li><a href=\"https://github.com/izzyleung/ZhihuDailyPurify/wiki/%E7%9F%A5%E4%B9%8E%E6%97%A5%E6%8A%A5-API-%E5%88%86%E6%9E%90\">知乎日报</a></li>\n<li><a href=\"https://api.imjad.cn/\">AD’s API</a></li>\n</ul>\n<hr>\n<h2 id=\"效率工具\"><a href=\"#效率工具\" class=\"headerlink\" title=\"效率工具\"></a>效率工具</h2><ul>\n<li><a href=\"https://github.com/thoughtbot/bourbon\">bourbon - A Lightweight Sass Tool Set</a></li>\n<li><a href=\"http://cubic-bezier.com/\">css3 cubic-bezier - 在线生成</a></li>\n<li><a href=\"https://isux.tencent.com/css3/tools.html\">css3 tools - css3动画工具</a></li>\n<li><a href=\"http://westciv.com/tools/gradients/\">CSS3 Tool</a></li>\n<li><a href=\"https://github.com/wuchangming/spy-debugger\">spy-debugger - 微信调试，各种WebView样式调试、手机浏览器的页面真机调试</a></li>\n<li><a href=\"http://elemefe.github.io/cooking/\">cooking - 基于 webapck 但更友好的配置项、易用的扩展配置机制</a></li>\n</ul>\n<h2 id=\"前端构建脚手架\"><a href=\"#前端构建脚手架\" class=\"headerlink\" title=\"前端构建脚手架\"></a>前端构建脚手架</h2><ul>\n<li><a href=\"https://github.com/chemdemo/webpack-seed\">webpack-seed - 基于webpack搭建纯静态页面型前端工程解决方案模板</a></li>\n<li><a href=\"https://github.com/cnu4/Webpack-Vue-MultiplePage\">Webpack-Vue-MultiplePage - 在多页面项目下使用 Webpack + Vue</a></li>\n<li><a href=\"https://github.com/jarvan4dev/vue-multi-page\">jarvan4dev/vue-multi-page - 基于vue-cli脚手架修改而成的多页面(非SPA)项目脚手架</a></li>\n<li><a href=\"https://github.com/cooking-demo/multiple-pages-vue\">cooking-demo/multiple-pages-vue - Vue 2 + webpack 2 多页面例子</a></li>\n<li><a href=\"https://github.com/cooking-demo/simple\">cooking-demo/simple - vue2+webpack2单页面</a></li>\n<li><a href=\"https://github.com/yanhaijing/fis3-base\">fis3-base - 基于fis3的纯前端解决方案</a></li>\n</ul>\n"}],"Post":[{"title":"[转载]ES5中数组Array.prototype方法的使用","date":"2017-03-08T08:08:57.000Z","_content":"\n熟悉ES5中数组Array.prototype方法的使用\n\n> 转载：[你还在用for循环大法麽？](https://shimo.im/doc/VXqv2bxTlOUiJJqO/)\n\n```javascript\nArray.prototype.indexOf\nArray.prototype.lastIndexOf\nArray.prototype.every\nArray.prototype.some\nArray.prototype.forEach\nArray.prototype.map\nArray.prototype.filter\nArray.prototype.reduce\nArray.prototype.reduceRight\n```\n\n## indexOf()\n\n`indexOf()` 方法返回在该数组中第一个找到的元素位置，没有则返回 `-1`\n\n**使用 for:**\n```javascript\nvar arr = ['apple','orange','pear'],\n    found = false;\nfor(var i= 0, l = arr.length; i< l; i++){\n    if(arr[i] === 'orange'){\n        found = true;\n    }\n}\nconsole.log(\"found:\",found);\n```\n\n**使用 indexOf:**\n````javascript\nvar arr = ['apple','orange','pear'];  \nconsole.log(\"found:\", arr.indexOf(\"orange\") != -1);\n```\n\n## lastindexOf()\n\n`lastindexOf()` 方法返回在该数组中最后一个找到的元素位置，与 indexOf 相反\n\n## every()\n\n`every()` 可以监测数组中的每一项是否符合条件\n\n**使用 for:**\n\n```javascript\n/* \n* 是否全部大于0\n*/\nvar ary = [12,23,24,42,1];\nvar result = function(){\n  for (var i = 0; i < ary.length; i++) {\n    if(ary[i] < 0){\n       return false;\n    }\n  }\n  return true; //需全部满足\n}\nconsole.log(result()) //全部满足,返回true\n```\n\n**使用 every:**\n```javascript\nvar ary = [12,23,24,42,1];\nvar result = ary.every(function(item, index){\n  return item > 0\n})\nconsole.log(result)\n```\n\n\n## some()\n\n`some()` 可以监测数组中的某一项是否符合条件\n\n**使用 for:**\n```javascript\n/* \n* 是否存在小于0的项\n*/\nvar ary = [12,23,-24,42,1];\nvar result = function(){\n  for (var i = 0; i < ary.length; i++) {\n    if(ary[i] < 0){\n       return true;\n    }\n  }\n  return false; //只需满足一个\n}\nconsole.log(result())  //有一项小于0，返回true\n```\n\n**使用 some:**\n```javascript\nvar ary = [12,23,-24,42,1];\nvar result = ary.some(function(item, index){\n  return item < 0\n})\nconsole.log(result)\n```\n\n\n## forEach()\n\n`forEach()` 为每个元素执行对应的方法，是用来替换for循环的\n\n**使用 for:**\n```javascript\nvar arr = [1,2,3,4,5,6,7,8];\n\nfor(var i= 0, l = arr.length; i< l; i++){\n  console.log(arr[i]);\n}\n```\n\n**使用 forEach:**\n```javascript\nvar arr = [1,2,3,4,5,6,7,8];\n\narr.forEach(function(item,index){\n  console.log(item);\n});\n```\n\n## map()\n\n'map()' 对数组的每个元素进行一定操作（映射）后，会返回一个新的数组，**是处理服务器返回数据时是一个非常实用的函数**\n\n**使用 for:**\n```javascript\nvar oldArr = [{\n   first_name:\"Colin\",last_name:\"Toh\"\n },\n {\n   first_name:\"Addy\",last_name:\"Osmani\"\n },\n {\n   first_name:\"Yehuda\",last_name:\"Katz\"\n }];\n\nfunction getNewArr(){\n  var newArr = [];\n  for(var i= 0, l = oldArr.length; i< l; i++){\n    var item = oldArr[i];\n    item.full_name = [item.first_name,item.last_name].join(\" \");\n    newArr[i] = item;\n  }\n  return newArr;\n}\nconsole.log(getNewArr());\n```\n\n**使用 map:**\n```javascript\nvar oldArr = [{\n   first_name:\"Colin\",last_name:\"Toh\"\n },\n {\n   first_name:\"Addy\",last_name:\"Osmani\"\n },\n {\n   first_name:\"Yehuda\",last_name:\"Katz\"\n }];\n\nfunction getNewArr(){\n  return oldArr.map(function(item,index){\n    item.full_name = [item.first_name,item.last_name].join(\" \");\n    return item;\n  });\n\n}\nconsole.log(getNewArr());\n```\n\n------\n\n## forEach 与 map 的区别\n\n**语法：**\n\n`forEach` 和 `map` 都支持2个参数：一个是回调函数（item,index,list）和 [上下文](http://note.youdao.com/noteshare?id=aa25aa404e4d92b9ed40ef79a46f91da)；\n\n>forEach：用来遍历数组中的每一项；这个方法执行是没有返回值的，对原来数组也没有影响；数组中有几项，那么传递进去的匿名回调函数就需要执行几次；每一次执行匿名函数的时候，还给其传递了三个参数值：数组中的当前项item,当前项的索引index,原始数组list；**理论上这个方法是没有返回值的，仅仅是遍历数组中的每一项，不对原来数组进行修改；但是我们可以自己通过数组的索引来修改原来的数组**；\n\n`forEach` 方法中的 `this` 是 `ary`,匿名回调函数中的 `this` 默认是 `window`；\n\n```javascript\nvar ary = [12,23,24,42,1];\nvar res = ary.forEach(function (item,index,input) {\n  input[index] = item*10;\n})\nconsole.log(res);//-->undefined;\nconsole.log(ary);//-->会对原来的数组产生改变；\n```\n\n>map： 和 forEach 非常相似，都是用来遍历数组中的每一项值的，用来遍历数组中的每一项；\n区别：map的回调函数中支持 return 返回值；return 的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；\n\n不管是forEach还是map 都支持第二个参数值，第二个参数的意思是把匿名回调函数中的this进行修改。\n\n```javascript\nvar ary = [12,23,24,42,1];\nvar res = ary.map(function (item,index,input) {\n  return item*10;\n})\nconsole.log(res);//-->[120,230,240,420,10];\nconsole.log(ary);//-->[12,23,24,42,1]；\n```\n\n------\n\n\n## filter()\n\n`filter()` 方法创建一个新的匹配过滤条件的数组\n\n**使用 for:**\n\n```javascript\nvar arr = [\n  {\"name\":\"apple\", \"count\": 2},\n  {\"name\":\"orange\", \"count\": 5},\n  {\"name\":\"pear\", \"count\": 3},\n  {\"name\":\"orange\", \"count\": 16},\n];\nvar newArr = [];\nfor(var i= 0, l = arr.length; i< l; i++){\n  if(arr[i].name === \"orange\" ){\n    newArr.push(arr[i]);\n  }\n}\nconsole.log(\"Filter results:\",newArr);\n```\n\n**使用 filter:**\n\n```javascript\nvar arr = [\n  {\"name\":\"apple\", \"count\": 2},\n  {\"name\":\"orange\", \"count\": 5},\n  {\"name\":\"pear\", \"count\": 3},\n  {\"name\":\"orange\", \"count\": 16},\n];\nvar newArr = arr.filter(function(item){\n  return item.name === \"orange\";\n});\nconsole.log(\"Filter results:\",newArr);\n```\n\n\n## reduce()\n\n我好像不理解这东西，原文就不放了......暂空\n\n## isArray()\n\n`isArray()` 是Array对象的一个静态函数，用来判断一个对象是不是数组\n\n```javascript\nvar ary1 = [];\nvar res1 = Array.isArray(ary1);  // Output: true\nconsole.log(res1)\n\nvar ary2 = new Array();\nvar res2 = Array.isArray(ary2);  // Output: true\nconsole.log(res2)\n\nvar ary3 = [1, 2, 3];\nvar res3 = Array.isArray(ary3);  // Output: true\nconsole.log(res3)\n\nvar ary4 = new Date();\nvar res4 = Array.isArray(ary4);  // Output: false\nconsole.log(res4)\n```","source":"_posts/ES5-array-prototype.md","raw":"---\ntitle: '[转载]ES5中数组Array.prototype方法的使用'\ndate: 2017-03-08 16:08:57\ncategories: javaScript日常笔记\ntags: array\n---\n\n熟悉ES5中数组Array.prototype方法的使用\n\n> 转载：[你还在用for循环大法麽？](https://shimo.im/doc/VXqv2bxTlOUiJJqO/)\n\n```javascript\nArray.prototype.indexOf\nArray.prototype.lastIndexOf\nArray.prototype.every\nArray.prototype.some\nArray.prototype.forEach\nArray.prototype.map\nArray.prototype.filter\nArray.prototype.reduce\nArray.prototype.reduceRight\n```\n\n## indexOf()\n\n`indexOf()` 方法返回在该数组中第一个找到的元素位置，没有则返回 `-1`\n\n**使用 for:**\n```javascript\nvar arr = ['apple','orange','pear'],\n    found = false;\nfor(var i= 0, l = arr.length; i< l; i++){\n    if(arr[i] === 'orange'){\n        found = true;\n    }\n}\nconsole.log(\"found:\",found);\n```\n\n**使用 indexOf:**\n````javascript\nvar arr = ['apple','orange','pear'];  \nconsole.log(\"found:\", arr.indexOf(\"orange\") != -1);\n```\n\n## lastindexOf()\n\n`lastindexOf()` 方法返回在该数组中最后一个找到的元素位置，与 indexOf 相反\n\n## every()\n\n`every()` 可以监测数组中的每一项是否符合条件\n\n**使用 for:**\n\n```javascript\n/* \n* 是否全部大于0\n*/\nvar ary = [12,23,24,42,1];\nvar result = function(){\n  for (var i = 0; i < ary.length; i++) {\n    if(ary[i] < 0){\n       return false;\n    }\n  }\n  return true; //需全部满足\n}\nconsole.log(result()) //全部满足,返回true\n```\n\n**使用 every:**\n```javascript\nvar ary = [12,23,24,42,1];\nvar result = ary.every(function(item, index){\n  return item > 0\n})\nconsole.log(result)\n```\n\n\n## some()\n\n`some()` 可以监测数组中的某一项是否符合条件\n\n**使用 for:**\n```javascript\n/* \n* 是否存在小于0的项\n*/\nvar ary = [12,23,-24,42,1];\nvar result = function(){\n  for (var i = 0; i < ary.length; i++) {\n    if(ary[i] < 0){\n       return true;\n    }\n  }\n  return false; //只需满足一个\n}\nconsole.log(result())  //有一项小于0，返回true\n```\n\n**使用 some:**\n```javascript\nvar ary = [12,23,-24,42,1];\nvar result = ary.some(function(item, index){\n  return item < 0\n})\nconsole.log(result)\n```\n\n\n## forEach()\n\n`forEach()` 为每个元素执行对应的方法，是用来替换for循环的\n\n**使用 for:**\n```javascript\nvar arr = [1,2,3,4,5,6,7,8];\n\nfor(var i= 0, l = arr.length; i< l; i++){\n  console.log(arr[i]);\n}\n```\n\n**使用 forEach:**\n```javascript\nvar arr = [1,2,3,4,5,6,7,8];\n\narr.forEach(function(item,index){\n  console.log(item);\n});\n```\n\n## map()\n\n'map()' 对数组的每个元素进行一定操作（映射）后，会返回一个新的数组，**是处理服务器返回数据时是一个非常实用的函数**\n\n**使用 for:**\n```javascript\nvar oldArr = [{\n   first_name:\"Colin\",last_name:\"Toh\"\n },\n {\n   first_name:\"Addy\",last_name:\"Osmani\"\n },\n {\n   first_name:\"Yehuda\",last_name:\"Katz\"\n }];\n\nfunction getNewArr(){\n  var newArr = [];\n  for(var i= 0, l = oldArr.length; i< l; i++){\n    var item = oldArr[i];\n    item.full_name = [item.first_name,item.last_name].join(\" \");\n    newArr[i] = item;\n  }\n  return newArr;\n}\nconsole.log(getNewArr());\n```\n\n**使用 map:**\n```javascript\nvar oldArr = [{\n   first_name:\"Colin\",last_name:\"Toh\"\n },\n {\n   first_name:\"Addy\",last_name:\"Osmani\"\n },\n {\n   first_name:\"Yehuda\",last_name:\"Katz\"\n }];\n\nfunction getNewArr(){\n  return oldArr.map(function(item,index){\n    item.full_name = [item.first_name,item.last_name].join(\" \");\n    return item;\n  });\n\n}\nconsole.log(getNewArr());\n```\n\n------\n\n## forEach 与 map 的区别\n\n**语法：**\n\n`forEach` 和 `map` 都支持2个参数：一个是回调函数（item,index,list）和 [上下文](http://note.youdao.com/noteshare?id=aa25aa404e4d92b9ed40ef79a46f91da)；\n\n>forEach：用来遍历数组中的每一项；这个方法执行是没有返回值的，对原来数组也没有影响；数组中有几项，那么传递进去的匿名回调函数就需要执行几次；每一次执行匿名函数的时候，还给其传递了三个参数值：数组中的当前项item,当前项的索引index,原始数组list；**理论上这个方法是没有返回值的，仅仅是遍历数组中的每一项，不对原来数组进行修改；但是我们可以自己通过数组的索引来修改原来的数组**；\n\n`forEach` 方法中的 `this` 是 `ary`,匿名回调函数中的 `this` 默认是 `window`；\n\n```javascript\nvar ary = [12,23,24,42,1];\nvar res = ary.forEach(function (item,index,input) {\n  input[index] = item*10;\n})\nconsole.log(res);//-->undefined;\nconsole.log(ary);//-->会对原来的数组产生改变；\n```\n\n>map： 和 forEach 非常相似，都是用来遍历数组中的每一项值的，用来遍历数组中的每一项；\n区别：map的回调函数中支持 return 返回值；return 的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；\n\n不管是forEach还是map 都支持第二个参数值，第二个参数的意思是把匿名回调函数中的this进行修改。\n\n```javascript\nvar ary = [12,23,24,42,1];\nvar res = ary.map(function (item,index,input) {\n  return item*10;\n})\nconsole.log(res);//-->[120,230,240,420,10];\nconsole.log(ary);//-->[12,23,24,42,1]；\n```\n\n------\n\n\n## filter()\n\n`filter()` 方法创建一个新的匹配过滤条件的数组\n\n**使用 for:**\n\n```javascript\nvar arr = [\n  {\"name\":\"apple\", \"count\": 2},\n  {\"name\":\"orange\", \"count\": 5},\n  {\"name\":\"pear\", \"count\": 3},\n  {\"name\":\"orange\", \"count\": 16},\n];\nvar newArr = [];\nfor(var i= 0, l = arr.length; i< l; i++){\n  if(arr[i].name === \"orange\" ){\n    newArr.push(arr[i]);\n  }\n}\nconsole.log(\"Filter results:\",newArr);\n```\n\n**使用 filter:**\n\n```javascript\nvar arr = [\n  {\"name\":\"apple\", \"count\": 2},\n  {\"name\":\"orange\", \"count\": 5},\n  {\"name\":\"pear\", \"count\": 3},\n  {\"name\":\"orange\", \"count\": 16},\n];\nvar newArr = arr.filter(function(item){\n  return item.name === \"orange\";\n});\nconsole.log(\"Filter results:\",newArr);\n```\n\n\n## reduce()\n\n我好像不理解这东西，原文就不放了......暂空\n\n## isArray()\n\n`isArray()` 是Array对象的一个静态函数，用来判断一个对象是不是数组\n\n```javascript\nvar ary1 = [];\nvar res1 = Array.isArray(ary1);  // Output: true\nconsole.log(res1)\n\nvar ary2 = new Array();\nvar res2 = Array.isArray(ary2);  // Output: true\nconsole.log(res2)\n\nvar ary3 = [1, 2, 3];\nvar res3 = Array.isArray(ary3);  // Output: true\nconsole.log(res3)\n\nvar ary4 = new Date();\nvar res4 = Array.isArray(ary4);  // Output: false\nconsole.log(res4)\n```","slug":"ES5-array-prototype","published":1,"updated":"2017-03-09T09:29:09.367Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0bzqxll0000acaj8i3wjkou","content":"<p>熟悉ES5中数组Array.prototype方法的使用</p>\n<blockquote>\n<p>转载：<a href=\"https://shimo.im/doc/VXqv2bxTlOUiJJqO/\" target=\"_blank\" rel=\"external\">你还在用for循环大法麽？</a></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.indexOf</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.lastIndexOf</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.every</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.some</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.forEach</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.map</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.filter</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.reduce</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.reduceRight</div></pre></td></tr></table></figure>\n<h2 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf()\"></a>indexOf()</h2><p><code>indexOf()</code> 方法返回在该数组中第一个找到的元素位置，没有则返回 <code>-1</code></p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'apple'</span>,<span class=\"string\">'orange'</span>,<span class=\"string\">'pear'</span>],</div><div class=\"line\">    found = <span class=\"literal\">false</span>;</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = arr.length; i&lt; l; i++)&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(arr[i] === <span class=\"string\">'orange'</span>)&#123;</div><div class=\"line\">        found = <span class=\"literal\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"found:\"</span>,found);</div></pre></td></tr></table></figure></p>\n<p><strong>使用 indexOf:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">var arr = [&apos;apple&apos;,&apos;orange&apos;,&apos;pear&apos;];  </div><div class=\"line\">console.log(&quot;found:&quot;, arr.indexOf(&quot;orange&quot;) != -1);</div></pre></td></tr></table></figure></p>\n<h2 id=\"lastindexOf\"><a href=\"#lastindexOf\" class=\"headerlink\" title=\"lastindexOf()\"></a>lastindexOf()</h2><p><code>lastindexOf()</code> 方法返回在该数组中最后一个找到的元素位置，与 indexOf 相反</p>\n<h2 id=\"every\"><a href=\"#every\" class=\"headerlink\" title=\"every()\"></a>every()</h2><p><code>every()</code> 可以监测数组中的每一项是否符合条件</p>\n<p><strong>使用 for:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* </span></div><div class=\"line\">* 是否全部大于0</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; ary.length; i++) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(ary[i] &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">//需全部满足</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result()) <span class=\"comment\">//全部满足,返回true</span></div></pre></td></tr></table></figure>\n<p><strong>使用 every:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = ary.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item &gt; <span class=\"number\">0</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result)</div></pre></td></tr></table></figure></p>\n<h2 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some()\"></a>some()</h2><p><code>some()</code> 可以监测数组中的某一项是否符合条件</p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* </span></div><div class=\"line\">* 是否存在小于0的项</div><div class=\"line\">*/</div><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">-24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; ary.length; i++) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(ary[i] &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">//只需满足一个</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result())  <span class=\"comment\">//有一项小于0，返回true</span></div></pre></td></tr></table></figure></p>\n<p><strong>使用 some:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">-24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = ary.some(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item &lt; <span class=\"number\">0</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result)</div></pre></td></tr></table></figure></p>\n<h2 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach()\"></a>forEach()</h2><p><code>forEach()</code> 为每个元素执行对应的方法，是用来替换for循环的</p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = arr.length; i&lt; l; i++)&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(arr[i]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>使用 forEach:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>];</div><div class=\"line\"></div><div class=\"line\">arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(item);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h2 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map()\"></a>map()</h2><p>‘map()’ 对数组的每个元素进行一定操作（映射）后，会返回一个新的数组，<strong>是处理服务器返回数据时是一个非常实用的函数</strong></p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oldArr = [&#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Colin\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Toh\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Addy\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Osmani\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Yehuda\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Katz\"</span></div><div class=\"line\"> &#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNewArr</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = oldArr.length; i&lt; l; i++)&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> item = oldArr[i];</div><div class=\"line\">    item.full_name = [item.first_name,item.last_name].join(<span class=\"string\">\" \"</span>);</div><div class=\"line\">    newArr[i] = item;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> newArr;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(getNewArr());</div></pre></td></tr></table></figure></p>\n<p><strong>使用 map:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oldArr = [&#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Colin\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Toh\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Addy\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Osmani\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Yehuda\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Katz\"</span></div><div class=\"line\"> &#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNewArr</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> oldArr.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index</span>)</span>&#123;</div><div class=\"line\">    item.full_name = [item.first_name,item.last_name].join(<span class=\"string\">\" \"</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> item;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(getNewArr());</div></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"forEach-与-map-的区别\"><a href=\"#forEach-与-map-的区别\" class=\"headerlink\" title=\"forEach 与 map 的区别\"></a>forEach 与 map 的区别</h2><p><strong>语法：</strong></p>\n<p><code>forEach</code> 和 <code>map</code> 都支持2个参数：一个是回调函数（item,index,list）和 <a href=\"http://note.youdao.com/noteshare?id=aa25aa404e4d92b9ed40ef79a46f91da\" target=\"_blank\" rel=\"external\">上下文</a>；</p>\n<blockquote>\n<p>forEach：用来遍历数组中的每一项；这个方法执行是没有返回值的，对原来数组也没有影响；数组中有几项，那么传递进去的匿名回调函数就需要执行几次；每一次执行匿名函数的时候，还给其传递了三个参数值：数组中的当前项item,当前项的索引index,原始数组list；<strong>理论上这个方法是没有返回值的，仅仅是遍历数组中的每一项，不对原来数组进行修改；但是我们可以自己通过数组的索引来修改原来的数组</strong>；</p>\n</blockquote>\n<p><code>forEach</code> 方法中的 <code>this</code> 是 <code>ary</code>,匿名回调函数中的 <code>this</code> 默认是 <code>window</code>；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> res = ary.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item,index,input</span>) </span>&#123;</div><div class=\"line\">  input[index] = item*<span class=\"number\">10</span>;</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(res);<span class=\"comment\">//--&gt;undefined;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(ary);<span class=\"comment\">//--&gt;会对原来的数组产生改变；</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>map： 和 forEach 非常相似，都是用来遍历数组中的每一项值的，用来遍历数组中的每一项；<br>区别：map的回调函数中支持 return 返回值；return 的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；</p>\n</blockquote>\n<p>不管是forEach还是map 都支持第二个参数值，第二个参数的意思是把匿名回调函数中的this进行修改。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> res = ary.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item,index,input</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item*<span class=\"number\">10</span>;</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(res);<span class=\"comment\">//--&gt;[120,230,240,420,10];</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(ary);<span class=\"comment\">//--&gt;[12,23,24,42,1]；</span></div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter()\"></a>filter()</h2><p><code>filter()</code> 方法创建一个新的匹配过滤条件的数组</p>\n<p><strong>使用 for:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"apple\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">2</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">5</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"pear\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">3</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">16</span>&#125;,</div><div class=\"line\">];</div><div class=\"line\"><span class=\"keyword\">var</span> newArr = [];</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = arr.length; i&lt; l; i++)&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(arr[i].name === <span class=\"string\">\"orange\"</span> )&#123;</div><div class=\"line\">    newArr.push(arr[i]);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"Filter results:\"</span>,newArr);</div></pre></td></tr></table></figure>\n<p><strong>使用 filter:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"apple\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">2</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">5</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"pear\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">3</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">16</span>&#125;,</div><div class=\"line\">];</div><div class=\"line\"><span class=\"keyword\">var</span> newArr = arr.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item.name === <span class=\"string\">\"orange\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"Filter results:\"</span>,newArr);</div></pre></td></tr></table></figure>\n<h2 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce()\"></a>reduce()</h2><p>我好像不理解这东西，原文就不放了……暂空</p>\n<h2 id=\"isArray\"><a href=\"#isArray\" class=\"headerlink\" title=\"isArray()\"></a>isArray()</h2><p><code>isArray()</code> 是Array对象的一个静态函数，用来判断一个对象是不是数组</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary1 = [];</div><div class=\"line\"><span class=\"keyword\">var</span> res1 = <span class=\"built_in\">Array</span>.isArray(ary1);  <span class=\"comment\">// Output: true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res1)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> ary2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\"><span class=\"keyword\">var</span> res2 = <span class=\"built_in\">Array</span>.isArray(ary2);  <span class=\"comment\">// Output: true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res2)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> ary3 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> res3 = <span class=\"built_in\">Array</span>.isArray(ary3);  <span class=\"comment\">// Output: true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res3)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> ary4 = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</div><div class=\"line\"><span class=\"keyword\">var</span> res4 = <span class=\"built_in\">Array</span>.isArray(ary4);  <span class=\"comment\">// Output: false</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res4)</div></pre></td></tr></table></figure>","excerpt":"","more":"<p>熟悉ES5中数组Array.prototype方法的使用</p>\n<blockquote>\n<p>转载：<a href=\"https://shimo.im/doc/VXqv2bxTlOUiJJqO/\">你还在用for循环大法麽？</a></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.indexOf</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.lastIndexOf</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.every</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.some</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.forEach</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.map</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.filter</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.reduce</div><div class=\"line\"><span class=\"built_in\">Array</span>.prototype.reduceRight</div></pre></td></tr></table></figure>\n<h2 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf()\"></a>indexOf()</h2><p><code>indexOf()</code> 方法返回在该数组中第一个找到的元素位置，没有则返回 <code>-1</code></p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"string\">'apple'</span>,<span class=\"string\">'orange'</span>,<span class=\"string\">'pear'</span>],</div><div class=\"line\">    found = <span class=\"literal\">false</span>;</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = arr.length; i&lt; l; i++)&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(arr[i] === <span class=\"string\">'orange'</span>)&#123;</div><div class=\"line\">        found = <span class=\"literal\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"found:\"</span>,found);</div></pre></td></tr></table></figure></p>\n<p><strong>使用 indexOf:</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">var arr = [&apos;apple&apos;,&apos;orange&apos;,&apos;pear&apos;];  </div><div class=\"line\">console.log(&quot;found:&quot;, arr.indexOf(&quot;orange&quot;) != -1);</div></pre></td></tr></table></figure></p>\n<h2 id=\"lastindexOf\"><a href=\"#lastindexOf\" class=\"headerlink\" title=\"lastindexOf()\"></a>lastindexOf()</h2><p><code>lastindexOf()</code> 方法返回在该数组中最后一个找到的元素位置，与 indexOf 相反</p>\n<h2 id=\"every\"><a href=\"#every\" class=\"headerlink\" title=\"every()\"></a>every()</h2><p><code>every()</code> 可以监测数组中的每一项是否符合条件</p>\n<p><strong>使用 for:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* </div><div class=\"line\">* 是否全部大于0</div><div class=\"line\">*/</span></div><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; ary.length; i++) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(ary[i] &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">true</span>; <span class=\"comment\">//需全部满足</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result()) <span class=\"comment\">//全部满足,返回true</span></div></pre></td></tr></table></figure>\n<p><strong>使用 every:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = ary.every(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item &gt; <span class=\"number\">0</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result)</div></pre></td></tr></table></figure></p>\n<h2 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some()\"></a>some()</h2><p><code>some()</code> 可以监测数组中的某一项是否符合条件</p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">/* </div><div class=\"line\">* 是否存在小于0的项</div><div class=\"line\">*/</span></div><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">-24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; ary.length; i++) &#123;</div><div class=\"line\">    <span class=\"keyword\">if</span>(ary[i] &lt; <span class=\"number\">0</span>)&#123;</div><div class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">false</span>; <span class=\"comment\">//只需满足一个</span></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result())  <span class=\"comment\">//有一项小于0，返回true</span></div></pre></td></tr></table></figure></p>\n<p><strong>使用 some:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">-24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> result = ary.some(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item, index</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item &lt; <span class=\"number\">0</span></div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(result)</div></pre></td></tr></table></figure></p>\n<h2 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach()\"></a>forEach()</h2><p><code>forEach()</code> 为每个元素执行对应的方法，是用来替换for循环的</p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>];</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = arr.length; i&lt; l; i++)&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(arr[i]);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><strong>使用 forEach:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>];</div><div class=\"line\"></div><div class=\"line\">arr.forEach(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index</span>)</span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(item);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<h2 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map()\"></a>map()</h2><p>‘map()’ 对数组的每个元素进行一定操作（映射）后，会返回一个新的数组，<strong>是处理服务器返回数据时是一个非常实用的函数</strong></p>\n<p><strong>使用 for:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oldArr = [&#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Colin\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Toh\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Addy\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Osmani\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Yehuda\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Katz\"</span></div><div class=\"line\"> &#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNewArr</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">var</span> newArr = [];</div><div class=\"line\">  <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = oldArr.length; i&lt; l; i++)&#123;</div><div class=\"line\">    <span class=\"keyword\">var</span> item = oldArr[i];</div><div class=\"line\">    item.full_name = [item.first_name,item.last_name].join(<span class=\"string\">\" \"</span>);</div><div class=\"line\">    newArr[i] = item;</div><div class=\"line\">  &#125;</div><div class=\"line\">  <span class=\"keyword\">return</span> newArr;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(getNewArr());</div></pre></td></tr></table></figure></p>\n<p><strong>使用 map:</strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> oldArr = [&#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Colin\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Toh\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Addy\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Osmani\"</span></div><div class=\"line\"> &#125;,</div><div class=\"line\"> &#123;</div><div class=\"line\">   <span class=\"attr\">first_name</span>:<span class=\"string\">\"Yehuda\"</span>,<span class=\"attr\">last_name</span>:<span class=\"string\">\"Katz\"</span></div><div class=\"line\"> &#125;];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getNewArr</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> oldArr.map(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item,index</span>)</span>&#123;</div><div class=\"line\">    item.full_name = [item.first_name,item.last_name].join(<span class=\"string\">\" \"</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> item;</div><div class=\"line\">  &#125;);</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(getNewArr());</div></pre></td></tr></table></figure></p>\n<hr>\n<h2 id=\"forEach-与-map-的区别\"><a href=\"#forEach-与-map-的区别\" class=\"headerlink\" title=\"forEach 与 map 的区别\"></a>forEach 与 map 的区别</h2><p><strong>语法：</strong></p>\n<p><code>forEach</code> 和 <code>map</code> 都支持2个参数：一个是回调函数（item,index,list）和 <a href=\"http://note.youdao.com/noteshare?id=aa25aa404e4d92b9ed40ef79a46f91da\">上下文</a>；</p>\n<blockquote>\n<p>forEach：用来遍历数组中的每一项；这个方法执行是没有返回值的，对原来数组也没有影响；数组中有几项，那么传递进去的匿名回调函数就需要执行几次；每一次执行匿名函数的时候，还给其传递了三个参数值：数组中的当前项item,当前项的索引index,原始数组list；<strong>理论上这个方法是没有返回值的，仅仅是遍历数组中的每一项，不对原来数组进行修改；但是我们可以自己通过数组的索引来修改原来的数组</strong>；</p>\n</blockquote>\n<p><code>forEach</code> 方法中的 <code>this</code> 是 <code>ary</code>,匿名回调函数中的 <code>this</code> 默认是 <code>window</code>；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> res = ary.forEach(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item,index,input</span>) </span>&#123;</div><div class=\"line\">  input[index] = item*<span class=\"number\">10</span>;</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(res);<span class=\"comment\">//--&gt;undefined;</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(ary);<span class=\"comment\">//--&gt;会对原来的数组产生改变；</span></div></pre></td></tr></table></figure>\n<blockquote>\n<p>map： 和 forEach 非常相似，都是用来遍历数组中的每一项值的，用来遍历数组中的每一项；<br>区别：map的回调函数中支持 return 返回值；return 的是啥，相当于把数组中的这一项变为啥（并不影响原来的数组，只是相当于把原数组克隆一份，把克隆的这一份的数组中的对应项改变了）；</p>\n</blockquote>\n<p>不管是forEach还是map 都支持第二个参数值，第二个参数的意思是把匿名回调函数中的this进行修改。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary = [<span class=\"number\">12</span>,<span class=\"number\">23</span>,<span class=\"number\">24</span>,<span class=\"number\">42</span>,<span class=\"number\">1</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> res = ary.map(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">item,index,input</span>) </span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item*<span class=\"number\">10</span>;</div><div class=\"line\">&#125;)</div><div class=\"line\"><span class=\"built_in\">console</span>.log(res);<span class=\"comment\">//--&gt;[120,230,240,420,10];</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(ary);<span class=\"comment\">//--&gt;[12,23,24,42,1]；</span></div></pre></td></tr></table></figure>\n<hr>\n<h2 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter()\"></a>filter()</h2><p><code>filter()</code> 方法创建一个新的匹配过滤条件的数组</p>\n<p><strong>使用 for:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"apple\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">2</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">5</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"pear\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">3</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">16</span>&#125;,</div><div class=\"line\">];</div><div class=\"line\"><span class=\"keyword\">var</span> newArr = [];</div><div class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i= <span class=\"number\">0</span>, l = arr.length; i&lt; l; i++)&#123;</div><div class=\"line\">  <span class=\"keyword\">if</span>(arr[i].name === <span class=\"string\">\"orange\"</span> )&#123;</div><div class=\"line\">    newArr.push(arr[i]);</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"Filter results:\"</span>,newArr);</div></pre></td></tr></table></figure>\n<p><strong>使用 filter:</strong></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> arr = [</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"apple\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">2</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">5</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"pear\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">3</span>&#125;,</div><div class=\"line\">  &#123;<span class=\"string\">\"name\"</span>:<span class=\"string\">\"orange\"</span>, <span class=\"string\">\"count\"</span>: <span class=\"number\">16</span>&#125;,</div><div class=\"line\">];</div><div class=\"line\"><span class=\"keyword\">var</span> newArr = arr.filter(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">item</span>)</span>&#123;</div><div class=\"line\">  <span class=\"keyword\">return</span> item.name === <span class=\"string\">\"orange\"</span>;</div><div class=\"line\">&#125;);</div><div class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">\"Filter results:\"</span>,newArr);</div></pre></td></tr></table></figure>\n<h2 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce()\"></a>reduce()</h2><p>我好像不理解这东西，原文就不放了……暂空</p>\n<h2 id=\"isArray\"><a href=\"#isArray\" class=\"headerlink\" title=\"isArray()\"></a>isArray()</h2><p><code>isArray()</code> 是Array对象的一个静态函数，用来判断一个对象是不是数组</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> ary1 = [];</div><div class=\"line\"><span class=\"keyword\">var</span> res1 = <span class=\"built_in\">Array</span>.isArray(ary1);  <span class=\"comment\">// Output: true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res1)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> ary2 = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>();</div><div class=\"line\"><span class=\"keyword\">var</span> res2 = <span class=\"built_in\">Array</span>.isArray(ary2);  <span class=\"comment\">// Output: true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res2)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> ary3 = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>];</div><div class=\"line\"><span class=\"keyword\">var</span> res3 = <span class=\"built_in\">Array</span>.isArray(ary3);  <span class=\"comment\">// Output: true</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res3)</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> ary4 = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</div><div class=\"line\"><span class=\"keyword\">var</span> res4 = <span class=\"built_in\">Array</span>.isArray(ary4);  <span class=\"comment\">// Output: false</span></div><div class=\"line\"><span class=\"built_in\">console</span>.log(res4)</div></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2016-12-06T08:56:29.000Z","_content":"那就开始吧，或许还不晚。\n\n``` javascript\nvar javaScript = {\n    // ...\n}\n```\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: \"2016-12-06 16:56:29\"\n---\n那就开始吧，或许还不晚。\n\n``` javascript\nvar javaScript = {\n    // ...\n}\n```\n","slug":"hello-world","published":1,"updated":"2016-12-07T08:46:53.421Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0bzqxls0002acajiy57058m","content":"<p>那就开始吧，或许还不晚。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> javaScript = &#123;</div><div class=\"line\">    <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>那就开始吧，或许还不晚。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> javaScript = &#123;</div><div class=\"line\">    <span class=\"comment\">// ...</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n"},{"title":"[转载]Web 中文字体应用指南","date":"2017-03-16T06:04:36.000Z","_content":"\n### 写在前面\n\n最近一个儿童教育机构的官网项目，碰上了字体处理的问题，本身解决各个平台对中文字体的相对友好的设置是件挺头疼的事儿，一般常见的方法就是设置 `font-family: sans-serif;` 即完全由各平台自己决定使用什么中文字体。\n\n但是为了解决需求，去搜索了能够相对友好的中文字体设置方法：[跨平台 CSS 中文字体解决方案 - zenozeng/fonts.css](https://github.com/zenozeng/fonts.css)\n\n下面的文字也详细的介绍了 web 中文字体的设置\n\n> 作者：[nightire](http://ruby-china.org/nightire) [Web 中文字体应用指南](http://ruby-china.org/topics/14005)\n\n------\n\n### Web 中文字体应用指南\n\n在 Web 上应用字体是一项基本技术，同时也是一门艺术。对于英文字体来说可选择的范围实在是太广泛了，合理的使用它们将会为你的网站增色不少。关于英文字体的使用和搭配技巧，在这里不做赘述，只推荐一套非常好的视频：[Fundamentals of Design by CodeSchool](https://www.codeschool.com/courses/fundamentals-of-design)\n\n而真正的挑战在于中文字体，由于中文字体组成的特殊性导致其体积过于庞大，除了操作系统内置的字体之外，我们很难在网站上应用其他的字体。在可选性很差的前提之下，如何正确的使用中文字体呢？\n\n首先，以下的字体声明都是很糟糕的，切忌使用：\n\n```css\nfont-family: \"宋体\";\n\nfont-family: \"宋体\", Arial;\n\nfont-family: Arial, \"宋体\", \"微软雅黑\";\n\nfont-family: Helvetica, Arial, \"华文细黑\", \"微软雅黑\";\n```\n\n接下来，我们一步一步来说明如何定义好的字体声明。\n\n### 中文字体也有英文名称\n\n很多开发者忽略了这一点：尽管我们在操作系统中常常看到宋体、微软雅黑、华文细黑这样的字体名称，但实际上这只是字体的显示名称，而不是字体文件的名称。虽然说在大多数情况下直接使用显示名称也有效，但有些用户却工作在一些很极端的情况下，这会导致你的字体声明无效。\n\n比如说，用户安装了中文版的操作系统（这意味着系统有中文字体），但是却切换到了以英文为主要语言——这种情况在那些希望加强英语锻炼的中文用户当中是很常见的。这时候，操作系统很有可能无法按照显示名称找到正确的字体，所以我们要记住的第一件事情就是： **同时声明中文字体的字体名称（英文）和显示名称（中文）**，就像这样：\n\n```css\nfont-family: SimSun, \"宋体\";\n\nfont-family: \"Microsoft YaHei\", \"微软雅黑\";\n\nfont-family: STXihei, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\";\n```\n\n### 永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\n\n记住这个事实：绝大部分中文字体里包含英文字母（但是基本上都很丑），而英文字体里不包含中文字符。\n\n在网页里中/英文混排是很常见的，你绝对不会喜欢用中文字体显示英文的效果，所以一定不要忘了先声明英文字体：\n\n```css\nfont-family: Georgia, SimSun, \"宋体\";\n\nfont-family: Arial, \"Microsoft YaHei\", \"微软雅黑\";\n```\n\n另外还有一个好习惯，就是在最后补充英文字体族的名称。字体族大体上分为两类：非衬线和衬线，它们之间的区别和使用规则请见本文开始介绍的视频。一般来说，你应该这么做：\n\n```css\nfont-family: Georgia, SimSun, \"宋体\", serif;\n\nfont-family: Arial, \"Microsoft YaHei\", \"微软雅黑\", sans-serif;\n```\n\n请注意：以上两句声明中的 宋体 和 微软雅黑 不应该调换（尽管调换了也不会发生错误），这是因为从字体的式样来看，微软雅黑 是非衬线的，而宋体才是衬线的。然而中文并不像英文那样严格区分字体族，所以这一点在实际应用当中并不那么重要。\n\n### 别忘了照顾不同的操作系统\n\n作为一个 Web 开发者，你理应对 Windows, Mac OS, Linux 家族等常用操作系统里的系统字体有足够的了解，特别是中文。在这里，我们假设目标网站要同时给予 windows 用户和 mac 用户最好的字体体验，于是我们可以这样声明：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, STXihei, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", sans-serif;\n```\n\n这句声明都做到哪些事情呢？让我们一一说明（括号内代表其对应的目标操作系统）：\n\n- 对于英文字符，首先查找 `Helvetica`(Mac)，然后查找 `Tahoma`(Win)，都找不到就用 `Arial`(Mac&Win)；若是以上三者都缺失，则使用当前默认的 `sans-serif` 字体(操作系统或浏览器指定)；\n- 对于中文字体，我们已经了解其规则了。`华文细黑`(Mac)，`微软雅黑`(Win)是这两个平台的默认中文字体。\n\n### 注意向下兼容\n\n到此为止，我们的字体声明已经很不错了——如果你不必考虑还在使用旧版本操作系统的用户的话。遗憾地是，中文市场还有大量的用户在使用 Windows XP，`宋体` 才是他们的主要中文字体。为了照顾到这些用户，你可以为 `微软雅黑` 增加一个 fallback：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, STXihei, \"华文细黑\", Heiti, \"黑体\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", sans-serif;\n```\n\n同样地，你看到我们也为 Mac 系统使用了 `黑体` 作为 fallback。\n\n\n### 其他\n\n#### 不加双引号可以吗？\n\n可以。有些英文字体的名称多于两个单词，因为单词中间有空格所以需要用 `\"\"` 包裹起来。中文字体很特别，按照英文的角度来看，像微软雅黑究竟算是一个词还是四个词呢？没关系，好在中文字体的名称里没有空格，所以 `\"\"` 不加也没什么大碍。\n\n不过，谁都不能保证在任何操作系统/浏览器环境下都是如此，若是发生了奇怪的事情，不妨加上双引号试试看。\n\n#### 可以默认显示某种字体吗？比如微软雅黑\n\n你可能注意到了，在我们最后的字体声明里，`华文细黑` 是默认字体（如果你的系统上安装了声明里所有的中文字体的话），为什么我要先声明 Mac 系统的字体呢？\n\n按理来说，大多数网站的主要目标市场还是 Windows 用户的，所以理论上这个才是合理的声明：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", STXihei, \"华文细黑\", Heiti, \"黑体\", sans-serif;\n```\n\n但实际上却并非如此。在中文字体的用户群体里，很大一部分拥有 Mac 的人都同时安装了 Win 下常用的中文字体（这得归功于 Office for Mac）；但极少有 Win 用户去安装 Mac 下的中文字体。\n\n因此，把 Mac 用字体声明在前面几乎不会对 Win 用户产生什么影响（因为他们压根没有！），倒是用来做 fallback 的黑体可能会取代微软雅黑的位置，所以更保险的做法或许是这样：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, STXihei, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", Heiti, \"黑体\", sans-serif;\n```\n\n但无论如何请不要把 `微软雅黑` 放在中文字体的最前面，作为史上最丑陋的中文字体之一，`微软雅黑` 实在不是什么好的选择，请照顾一下被 Mac 宠坏的用户吧，谢谢！（仅代表个人观点）\n\nBTW，如果你也像我一样不喜欢呆头呆脑的 `微软雅黑`，那就干脆把它删了吧~\n\n到此为止，虽然在我们的示例代码里没有包含 Linux 家族的例子，不过相信你也明白该怎么做了吧。\n\n\n### 一点补充\n\n鉴于一些人对 `微软雅黑` 的排位产生异议，我不妨把上文的解决方案再延伸一步。事实是这样子的：\n\n- 把 `微软雅黑` 放前面，会导致安装了 `微软雅黑` 字体的 Mac 用户不得不面对 `微软雅黑`，而在 Mac 下比 `微软雅黑` 优雅得多的中文字体比比皆是；\n- 把 Mac 下的字体放前面，也会对 Windows 用户造成差不多的困惑，毕竟微软雅黑是 Windows 平台下显示效果最好的字体（目前为止）；\n1 和 2，哪一种出现的概率更大一些？我想这是一个不需要计算就能知道的答案吧？\n\n但是——的确还有另外两个因素在纠结着：\n\n- 不少 Windows 用户因为各种原因关闭了 `ClearType`，在此情形下微软雅黑将会惨不忍睹！但是 Mac 的字体也不是好的选择，真正的胜出者？猜对了，宋体。\n- 绝大部分 Mac 下的黑体在 Windows 下模糊不清，而微软雅黑虽然丑但在 Mac 下至少能看。（间接体现了两个平台的字体渲染技术的差距）\n\n所以在实践中，真正接近“万无一失”的方案需要考虑以下几点：\n\n- 利用 UA 判断为不同的平台加载不一样的字体声明；\n- 除非有特别的原因，否则尽量保持正文用宋体，标题和其他可以放大些的地方用 `微软雅黑` （针对 Windows）；\n- Mac 下的冬青体效果极佳，但是该字体在 Mac OS X 10.6 以前是没有的，所以谨慎考虑你的用户群体，或者使用华文黑体系列做 fallback；\n\n最后，我不想再和任何人争论字体的优劣，本文的目的是介绍使用方法而不是字体选择。“美”或“丑”向来都是很主观的事情，只因为我是作者，所以我免不了会有倾向性，然而我也相信你自己会有正确的判断，和我较真没有任何实际意义。","source":"_posts/web-chinese-fonts-guide.md","raw":"---\ntitle: '[转载]Web 中文字体应用指南'\ndate: 2017-03-16 14:04:36\ncategories: 项目总结\ntags: font\n---\n\n### 写在前面\n\n最近一个儿童教育机构的官网项目，碰上了字体处理的问题，本身解决各个平台对中文字体的相对友好的设置是件挺头疼的事儿，一般常见的方法就是设置 `font-family: sans-serif;` 即完全由各平台自己决定使用什么中文字体。\n\n但是为了解决需求，去搜索了能够相对友好的中文字体设置方法：[跨平台 CSS 中文字体解决方案 - zenozeng/fonts.css](https://github.com/zenozeng/fonts.css)\n\n下面的文字也详细的介绍了 web 中文字体的设置\n\n> 作者：[nightire](http://ruby-china.org/nightire) [Web 中文字体应用指南](http://ruby-china.org/topics/14005)\n\n------\n\n### Web 中文字体应用指南\n\n在 Web 上应用字体是一项基本技术，同时也是一门艺术。对于英文字体来说可选择的范围实在是太广泛了，合理的使用它们将会为你的网站增色不少。关于英文字体的使用和搭配技巧，在这里不做赘述，只推荐一套非常好的视频：[Fundamentals of Design by CodeSchool](https://www.codeschool.com/courses/fundamentals-of-design)\n\n而真正的挑战在于中文字体，由于中文字体组成的特殊性导致其体积过于庞大，除了操作系统内置的字体之外，我们很难在网站上应用其他的字体。在可选性很差的前提之下，如何正确的使用中文字体呢？\n\n首先，以下的字体声明都是很糟糕的，切忌使用：\n\n```css\nfont-family: \"宋体\";\n\nfont-family: \"宋体\", Arial;\n\nfont-family: Arial, \"宋体\", \"微软雅黑\";\n\nfont-family: Helvetica, Arial, \"华文细黑\", \"微软雅黑\";\n```\n\n接下来，我们一步一步来说明如何定义好的字体声明。\n\n### 中文字体也有英文名称\n\n很多开发者忽略了这一点：尽管我们在操作系统中常常看到宋体、微软雅黑、华文细黑这样的字体名称，但实际上这只是字体的显示名称，而不是字体文件的名称。虽然说在大多数情况下直接使用显示名称也有效，但有些用户却工作在一些很极端的情况下，这会导致你的字体声明无效。\n\n比如说，用户安装了中文版的操作系统（这意味着系统有中文字体），但是却切换到了以英文为主要语言——这种情况在那些希望加强英语锻炼的中文用户当中是很常见的。这时候，操作系统很有可能无法按照显示名称找到正确的字体，所以我们要记住的第一件事情就是： **同时声明中文字体的字体名称（英文）和显示名称（中文）**，就像这样：\n\n```css\nfont-family: SimSun, \"宋体\";\n\nfont-family: \"Microsoft YaHei\", \"微软雅黑\";\n\nfont-family: STXihei, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\";\n```\n\n### 永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\n\n记住这个事实：绝大部分中文字体里包含英文字母（但是基本上都很丑），而英文字体里不包含中文字符。\n\n在网页里中/英文混排是很常见的，你绝对不会喜欢用中文字体显示英文的效果，所以一定不要忘了先声明英文字体：\n\n```css\nfont-family: Georgia, SimSun, \"宋体\";\n\nfont-family: Arial, \"Microsoft YaHei\", \"微软雅黑\";\n```\n\n另外还有一个好习惯，就是在最后补充英文字体族的名称。字体族大体上分为两类：非衬线和衬线，它们之间的区别和使用规则请见本文开始介绍的视频。一般来说，你应该这么做：\n\n```css\nfont-family: Georgia, SimSun, \"宋体\", serif;\n\nfont-family: Arial, \"Microsoft YaHei\", \"微软雅黑\", sans-serif;\n```\n\n请注意：以上两句声明中的 宋体 和 微软雅黑 不应该调换（尽管调换了也不会发生错误），这是因为从字体的式样来看，微软雅黑 是非衬线的，而宋体才是衬线的。然而中文并不像英文那样严格区分字体族，所以这一点在实际应用当中并不那么重要。\n\n### 别忘了照顾不同的操作系统\n\n作为一个 Web 开发者，你理应对 Windows, Mac OS, Linux 家族等常用操作系统里的系统字体有足够的了解，特别是中文。在这里，我们假设目标网站要同时给予 windows 用户和 mac 用户最好的字体体验，于是我们可以这样声明：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, STXihei, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", sans-serif;\n```\n\n这句声明都做到哪些事情呢？让我们一一说明（括号内代表其对应的目标操作系统）：\n\n- 对于英文字符，首先查找 `Helvetica`(Mac)，然后查找 `Tahoma`(Win)，都找不到就用 `Arial`(Mac&Win)；若是以上三者都缺失，则使用当前默认的 `sans-serif` 字体(操作系统或浏览器指定)；\n- 对于中文字体，我们已经了解其规则了。`华文细黑`(Mac)，`微软雅黑`(Win)是这两个平台的默认中文字体。\n\n### 注意向下兼容\n\n到此为止，我们的字体声明已经很不错了——如果你不必考虑还在使用旧版本操作系统的用户的话。遗憾地是，中文市场还有大量的用户在使用 Windows XP，`宋体` 才是他们的主要中文字体。为了照顾到这些用户，你可以为 `微软雅黑` 增加一个 fallback：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, STXihei, \"华文细黑\", Heiti, \"黑体\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", sans-serif;\n```\n\n同样地，你看到我们也为 Mac 系统使用了 `黑体` 作为 fallback。\n\n\n### 其他\n\n#### 不加双引号可以吗？\n\n可以。有些英文字体的名称多于两个单词，因为单词中间有空格所以需要用 `\"\"` 包裹起来。中文字体很特别，按照英文的角度来看，像微软雅黑究竟算是一个词还是四个词呢？没关系，好在中文字体的名称里没有空格，所以 `\"\"` 不加也没什么大碍。\n\n不过，谁都不能保证在任何操作系统/浏览器环境下都是如此，若是发生了奇怪的事情，不妨加上双引号试试看。\n\n#### 可以默认显示某种字体吗？比如微软雅黑\n\n你可能注意到了，在我们最后的字体声明里，`华文细黑` 是默认字体（如果你的系统上安装了声明里所有的中文字体的话），为什么我要先声明 Mac 系统的字体呢？\n\n按理来说，大多数网站的主要目标市场还是 Windows 用户的，所以理论上这个才是合理的声明：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", STXihei, \"华文细黑\", Heiti, \"黑体\", sans-serif;\n```\n\n但实际上却并非如此。在中文字体的用户群体里，很大一部分拥有 Mac 的人都同时安装了 Win 下常用的中文字体（这得归功于 Office for Mac）；但极少有 Win 用户去安装 Mac 下的中文字体。\n\n因此，把 Mac 用字体声明在前面几乎不会对 Win 用户产生什么影响（因为他们压根没有！），倒是用来做 fallback 的黑体可能会取代微软雅黑的位置，所以更保险的做法或许是这样：\n\n```css\nfont-family: Helvetica, Tahoma, Arial, STXihei, \"华文细黑\", \"Microsoft YaHei\", \"微软雅黑\", SimSun, \"宋体\", Heiti, \"黑体\", sans-serif;\n```\n\n但无论如何请不要把 `微软雅黑` 放在中文字体的最前面，作为史上最丑陋的中文字体之一，`微软雅黑` 实在不是什么好的选择，请照顾一下被 Mac 宠坏的用户吧，谢谢！（仅代表个人观点）\n\nBTW，如果你也像我一样不喜欢呆头呆脑的 `微软雅黑`，那就干脆把它删了吧~\n\n到此为止，虽然在我们的示例代码里没有包含 Linux 家族的例子，不过相信你也明白该怎么做了吧。\n\n\n### 一点补充\n\n鉴于一些人对 `微软雅黑` 的排位产生异议，我不妨把上文的解决方案再延伸一步。事实是这样子的：\n\n- 把 `微软雅黑` 放前面，会导致安装了 `微软雅黑` 字体的 Mac 用户不得不面对 `微软雅黑`，而在 Mac 下比 `微软雅黑` 优雅得多的中文字体比比皆是；\n- 把 Mac 下的字体放前面，也会对 Windows 用户造成差不多的困惑，毕竟微软雅黑是 Windows 平台下显示效果最好的字体（目前为止）；\n1 和 2，哪一种出现的概率更大一些？我想这是一个不需要计算就能知道的答案吧？\n\n但是——的确还有另外两个因素在纠结着：\n\n- 不少 Windows 用户因为各种原因关闭了 `ClearType`，在此情形下微软雅黑将会惨不忍睹！但是 Mac 的字体也不是好的选择，真正的胜出者？猜对了，宋体。\n- 绝大部分 Mac 下的黑体在 Windows 下模糊不清，而微软雅黑虽然丑但在 Mac 下至少能看。（间接体现了两个平台的字体渲染技术的差距）\n\n所以在实践中，真正接近“万无一失”的方案需要考虑以下几点：\n\n- 利用 UA 判断为不同的平台加载不一样的字体声明；\n- 除非有特别的原因，否则尽量保持正文用宋体，标题和其他可以放大些的地方用 `微软雅黑` （针对 Windows）；\n- Mac 下的冬青体效果极佳，但是该字体在 Mac OS X 10.6 以前是没有的，所以谨慎考虑你的用户群体，或者使用华文黑体系列做 fallback；\n\n最后，我不想再和任何人争论字体的优劣，本文的目的是介绍使用方法而不是字体选择。“美”或“丑”向来都是很主观的事情，只因为我是作者，所以我免不了会有倾向性，然而我也相信你自己会有正确的判断，和我较真没有任何实际意义。","slug":"web-chinese-fonts-guide","published":1,"updated":"2017-03-16T06:51:34.407Z","_id":"cj0bzqxlz0006acajaqiue6ex","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>最近一个儿童教育机构的官网项目，碰上了字体处理的问题，本身解决各个平台对中文字体的相对友好的设置是件挺头疼的事儿，一般常见的方法就是设置 <code>font-family: sans-serif;</code> 即完全由各平台自己决定使用什么中文字体。</p>\n<p>但是为了解决需求，去搜索了能够相对友好的中文字体设置方法：<a href=\"https://github.com/zenozeng/fonts.css\" target=\"_blank\" rel=\"external\">跨平台 CSS 中文字体解决方案 - zenozeng/fonts.css</a></p>\n<p>下面的文字也详细的介绍了 web 中文字体的设置</p>\n<blockquote>\n<p>作者：<a href=\"http://ruby-china.org/nightire\" target=\"_blank\" rel=\"external\">nightire</a> <a href=\"http://ruby-china.org/topics/14005\" target=\"_blank\" rel=\"external\">Web 中文字体应用指南</a></p>\n</blockquote>\n<hr>\n<h3 id=\"Web-中文字体应用指南\"><a href=\"#Web-中文字体应用指南\" class=\"headerlink\" title=\"Web 中文字体应用指南\"></a>Web 中文字体应用指南</h3><p>在 Web 上应用字体是一项基本技术，同时也是一门艺术。对于英文字体来说可选择的范围实在是太广泛了，合理的使用它们将会为你的网站增色不少。关于英文字体的使用和搭配技巧，在这里不做赘述，只推荐一套非常好的视频：<a href=\"https://www.codeschool.com/courses/fundamentals-of-design\" target=\"_blank\" rel=\"external\">Fundamentals of Design by CodeSchool</a></p>\n<p>而真正的挑战在于中文字体，由于中文字体组成的特殊性导致其体积过于庞大，除了操作系统内置的字体之外，我们很难在网站上应用其他的字体。在可选性很差的前提之下，如何正确的使用中文字体呢？</p>\n<p>首先，以下的字体声明都是很糟糕的，切忌使用：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: \"宋体\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: \"宋体\", <span class=\"selector-tag\">Arial</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Arial</span>, \"宋体\", \"微软雅黑\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Arial</span>, \"华文细黑\", \"微软雅黑\";</div></pre></td></tr></table></figure>\n<p>接下来，我们一步一步来说明如何定义好的字体声明。</p>\n<h3 id=\"中文字体也有英文名称\"><a href=\"#中文字体也有英文名称\" class=\"headerlink\" title=\"中文字体也有英文名称\"></a>中文字体也有英文名称</h3><p>很多开发者忽略了这一点：尽管我们在操作系统中常常看到宋体、微软雅黑、华文细黑这样的字体名称，但实际上这只是字体的显示名称，而不是字体文件的名称。虽然说在大多数情况下直接使用显示名称也有效，但有些用户却工作在一些很极端的情况下，这会导致你的字体声明无效。</p>\n<p>比如说，用户安装了中文版的操作系统（这意味着系统有中文字体），但是却切换到了以英文为主要语言——这种情况在那些希望加强英语锻炼的中文用户当中是很常见的。这时候，操作系统很有可能无法按照显示名称找到正确的字体，所以我们要记住的第一件事情就是： <strong>同时声明中文字体的字体名称（英文）和显示名称（中文）</strong>，就像这样：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">SimSun</span>, \"宋体\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\";</div></pre></td></tr></table></figure>\n<h3 id=\"永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\"><a href=\"#永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\" class=\"headerlink\" title=\"永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\"></a>永远不要忘记声明英文字体，并且英文字体应该在中文字体之前</h3><p>记住这个事实：绝大部分中文字体里包含英文字母（但是基本上都很丑），而英文字体里不包含中文字符。</p>\n<p>在网页里中/英文混排是很常见的，你绝对不会喜欢用中文字体显示英文的效果，所以一定不要忘了先声明英文字体：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Georgia</span>, <span class=\"selector-tag\">SimSun</span>, \"宋体\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Arial</span>, \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\";</div></pre></td></tr></table></figure>\n<p>另外还有一个好习惯，就是在最后补充英文字体族的名称。字体族大体上分为两类：非衬线和衬线，它们之间的区别和使用规则请见本文开始介绍的视频。一般来说，你应该这么做：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Georgia</span>, <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">serif</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Arial</span>, \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>请注意：以上两句声明中的 宋体 和 微软雅黑 不应该调换（尽管调换了也不会发生错误），这是因为从字体的式样来看，微软雅黑 是非衬线的，而宋体才是衬线的。然而中文并不像英文那样严格区分字体族，所以这一点在实际应用当中并不那么重要。</p>\n<h3 id=\"别忘了照顾不同的操作系统\"><a href=\"#别忘了照顾不同的操作系统\" class=\"headerlink\" title=\"别忘了照顾不同的操作系统\"></a>别忘了照顾不同的操作系统</h3><p>作为一个 Web 开发者，你理应对 Windows, Mac OS, Linux 家族等常用操作系统里的系统字体有足够的了解，特别是中文。在这里，我们假设目标网站要同时给予 windows 用户和 mac 用户最好的字体体验，于是我们可以这样声明：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>这句声明都做到哪些事情呢？让我们一一说明（括号内代表其对应的目标操作系统）：</p>\n<ul>\n<li>对于英文字符，首先查找 <code>Helvetica</code>(Mac)，然后查找 <code>Tahoma</code>(Win)，都找不到就用 <code>Arial</code>(Mac&amp;Win)；若是以上三者都缺失，则使用当前默认的 <code>sans-serif</code> 字体(操作系统或浏览器指定)；</li>\n<li>对于中文字体，我们已经了解其规则了。<code>华文细黑</code>(Mac)，<code>微软雅黑</code>(Win)是这两个平台的默认中文字体。</li>\n</ul>\n<h3 id=\"注意向下兼容\"><a href=\"#注意向下兼容\" class=\"headerlink\" title=\"注意向下兼容\"></a>注意向下兼容</h3><p>到此为止，我们的字体声明已经很不错了——如果你不必考虑还在使用旧版本操作系统的用户的话。遗憾地是，中文市场还有大量的用户在使用 Windows XP，<code>宋体</code> 才是他们的主要中文字体。为了照顾到这些用户，你可以为 <code>微软雅黑</code> 增加一个 fallback：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", <span class=\"selector-tag\">Heiti</span>, \"黑体\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>同样地，你看到我们也为 Mac 系统使用了 <code>黑体</code> 作为 fallback。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h4 id=\"不加双引号可以吗？\"><a href=\"#不加双引号可以吗？\" class=\"headerlink\" title=\"不加双引号可以吗？\"></a>不加双引号可以吗？</h4><p>可以。有些英文字体的名称多于两个单词，因为单词中间有空格所以需要用 <code>&quot;&quot;</code> 包裹起来。中文字体很特别，按照英文的角度来看，像微软雅黑究竟算是一个词还是四个词呢？没关系，好在中文字体的名称里没有空格，所以 <code>&quot;&quot;</code> 不加也没什么大碍。</p>\n<p>不过，谁都不能保证在任何操作系统/浏览器环境下都是如此，若是发生了奇怪的事情，不妨加上双引号试试看。</p>\n<h4 id=\"可以默认显示某种字体吗？比如微软雅黑\"><a href=\"#可以默认显示某种字体吗？比如微软雅黑\" class=\"headerlink\" title=\"可以默认显示某种字体吗？比如微软雅黑\"></a>可以默认显示某种字体吗？比如微软雅黑</h4><p>你可能注意到了，在我们最后的字体声明里，<code>华文细黑</code> 是默认字体（如果你的系统上安装了声明里所有的中文字体的话），为什么我要先声明 Mac 系统的字体呢？</p>\n<p>按理来说，大多数网站的主要目标市场还是 Windows 用户的，所以理论上这个才是合理的声明：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", <span class=\"selector-tag\">Heiti</span>, \"黑体\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>但实际上却并非如此。在中文字体的用户群体里，很大一部分拥有 Mac 的人都同时安装了 Win 下常用的中文字体（这得归功于 Office for Mac）；但极少有 Win 用户去安装 Mac 下的中文字体。</p>\n<p>因此，把 Mac 用字体声明在前面几乎不会对 Win 用户产生什么影响（因为他们压根没有！），倒是用来做 fallback 的黑体可能会取代微软雅黑的位置，所以更保险的做法或许是这样：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">Heiti</span>, \"黑体\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>但无论如何请不要把 <code>微软雅黑</code> 放在中文字体的最前面，作为史上最丑陋的中文字体之一，<code>微软雅黑</code> 实在不是什么好的选择，请照顾一下被 Mac 宠坏的用户吧，谢谢！（仅代表个人观点）</p>\n<p>BTW，如果你也像我一样不喜欢呆头呆脑的 <code>微软雅黑</code>，那就干脆把它删了吧~</p>\n<p>到此为止，虽然在我们的示例代码里没有包含 Linux 家族的例子，不过相信你也明白该怎么做了吧。</p>\n<h3 id=\"一点补充\"><a href=\"#一点补充\" class=\"headerlink\" title=\"一点补充\"></a>一点补充</h3><p>鉴于一些人对 <code>微软雅黑</code> 的排位产生异议，我不妨把上文的解决方案再延伸一步。事实是这样子的：</p>\n<ul>\n<li>把 <code>微软雅黑</code> 放前面，会导致安装了 <code>微软雅黑</code> 字体的 Mac 用户不得不面对 <code>微软雅黑</code>，而在 Mac 下比 <code>微软雅黑</code> 优雅得多的中文字体比比皆是；</li>\n<li>把 Mac 下的字体放前面，也会对 Windows 用户造成差不多的困惑，毕竟微软雅黑是 Windows 平台下显示效果最好的字体（目前为止）；<br>1 和 2，哪一种出现的概率更大一些？我想这是一个不需要计算就能知道的答案吧？</li>\n</ul>\n<p>但是——的确还有另外两个因素在纠结着：</p>\n<ul>\n<li>不少 Windows 用户因为各种原因关闭了 <code>ClearType</code>，在此情形下微软雅黑将会惨不忍睹！但是 Mac 的字体也不是好的选择，真正的胜出者？猜对了，宋体。</li>\n<li>绝大部分 Mac 下的黑体在 Windows 下模糊不清，而微软雅黑虽然丑但在 Mac 下至少能看。（间接体现了两个平台的字体渲染技术的差距）</li>\n</ul>\n<p>所以在实践中，真正接近“万无一失”的方案需要考虑以下几点：</p>\n<ul>\n<li>利用 UA 判断为不同的平台加载不一样的字体声明；</li>\n<li>除非有特别的原因，否则尽量保持正文用宋体，标题和其他可以放大些的地方用 <code>微软雅黑</code> （针对 Windows）；</li>\n<li>Mac 下的冬青体效果极佳，但是该字体在 Mac OS X 10.6 以前是没有的，所以谨慎考虑你的用户群体，或者使用华文黑体系列做 fallback；</li>\n</ul>\n<p>最后，我不想再和任何人争论字体的优劣，本文的目的是介绍使用方法而不是字体选择。“美”或“丑”向来都是很主观的事情，只因为我是作者，所以我免不了会有倾向性，然而我也相信你自己会有正确的判断，和我较真没有任何实际意义。</p>\n","excerpt":"","more":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>最近一个儿童教育机构的官网项目，碰上了字体处理的问题，本身解决各个平台对中文字体的相对友好的设置是件挺头疼的事儿，一般常见的方法就是设置 <code>font-family: sans-serif;</code> 即完全由各平台自己决定使用什么中文字体。</p>\n<p>但是为了解决需求，去搜索了能够相对友好的中文字体设置方法：<a href=\"https://github.com/zenozeng/fonts.css\">跨平台 CSS 中文字体解决方案 - zenozeng/fonts.css</a></p>\n<p>下面的文字也详细的介绍了 web 中文字体的设置</p>\n<blockquote>\n<p>作者：<a href=\"http://ruby-china.org/nightire\">nightire</a> <a href=\"http://ruby-china.org/topics/14005\">Web 中文字体应用指南</a></p>\n</blockquote>\n<hr>\n<h3 id=\"Web-中文字体应用指南\"><a href=\"#Web-中文字体应用指南\" class=\"headerlink\" title=\"Web 中文字体应用指南\"></a>Web 中文字体应用指南</h3><p>在 Web 上应用字体是一项基本技术，同时也是一门艺术。对于英文字体来说可选择的范围实在是太广泛了，合理的使用它们将会为你的网站增色不少。关于英文字体的使用和搭配技巧，在这里不做赘述，只推荐一套非常好的视频：<a href=\"https://www.codeschool.com/courses/fundamentals-of-design\">Fundamentals of Design by CodeSchool</a></p>\n<p>而真正的挑战在于中文字体，由于中文字体组成的特殊性导致其体积过于庞大，除了操作系统内置的字体之外，我们很难在网站上应用其他的字体。在可选性很差的前提之下，如何正确的使用中文字体呢？</p>\n<p>首先，以下的字体声明都是很糟糕的，切忌使用：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: \"宋体\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: \"宋体\", <span class=\"selector-tag\">Arial</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Arial</span>, \"宋体\", \"微软雅黑\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Arial</span>, \"华文细黑\", \"微软雅黑\";</div></pre></td></tr></table></figure>\n<p>接下来，我们一步一步来说明如何定义好的字体声明。</p>\n<h3 id=\"中文字体也有英文名称\"><a href=\"#中文字体也有英文名称\" class=\"headerlink\" title=\"中文字体也有英文名称\"></a>中文字体也有英文名称</h3><p>很多开发者忽略了这一点：尽管我们在操作系统中常常看到宋体、微软雅黑、华文细黑这样的字体名称，但实际上这只是字体的显示名称，而不是字体文件的名称。虽然说在大多数情况下直接使用显示名称也有效，但有些用户却工作在一些很极端的情况下，这会导致你的字体声明无效。</p>\n<p>比如说，用户安装了中文版的操作系统（这意味着系统有中文字体），但是却切换到了以英文为主要语言——这种情况在那些希望加强英语锻炼的中文用户当中是很常见的。这时候，操作系统很有可能无法按照显示名称找到正确的字体，所以我们要记住的第一件事情就是： <strong>同时声明中文字体的字体名称（英文）和显示名称（中文）</strong>，就像这样：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">SimSun</span>, \"宋体\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\";</div></pre></td></tr></table></figure>\n<h3 id=\"永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\"><a href=\"#永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\" class=\"headerlink\" title=\"永远不要忘记声明英文字体，并且英文字体应该在中文字体之前\"></a>永远不要忘记声明英文字体，并且英文字体应该在中文字体之前</h3><p>记住这个事实：绝大部分中文字体里包含英文字母（但是基本上都很丑），而英文字体里不包含中文字符。</p>\n<p>在网页里中/英文混排是很常见的，你绝对不会喜欢用中文字体显示英文的效果，所以一定不要忘了先声明英文字体：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Georgia</span>, <span class=\"selector-tag\">SimSun</span>, \"宋体\";</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Arial</span>, \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\";</div></pre></td></tr></table></figure>\n<p>另外还有一个好习惯，就是在最后补充英文字体族的名称。字体族大体上分为两类：非衬线和衬线，它们之间的区别和使用规则请见本文开始介绍的视频。一般来说，你应该这么做：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Georgia</span>, <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">serif</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Arial</span>, \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>请注意：以上两句声明中的 宋体 和 微软雅黑 不应该调换（尽管调换了也不会发生错误），这是因为从字体的式样来看，微软雅黑 是非衬线的，而宋体才是衬线的。然而中文并不像英文那样严格区分字体族，所以这一点在实际应用当中并不那么重要。</p>\n<h3 id=\"别忘了照顾不同的操作系统\"><a href=\"#别忘了照顾不同的操作系统\" class=\"headerlink\" title=\"别忘了照顾不同的操作系统\"></a>别忘了照顾不同的操作系统</h3><p>作为一个 Web 开发者，你理应对 Windows, Mac OS, Linux 家族等常用操作系统里的系统字体有足够的了解，特别是中文。在这里，我们假设目标网站要同时给予 windows 用户和 mac 用户最好的字体体验，于是我们可以这样声明：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>这句声明都做到哪些事情呢？让我们一一说明（括号内代表其对应的目标操作系统）：</p>\n<ul>\n<li>对于英文字符，首先查找 <code>Helvetica</code>(Mac)，然后查找 <code>Tahoma</code>(Win)，都找不到就用 <code>Arial</code>(Mac&amp;Win)；若是以上三者都缺失，则使用当前默认的 <code>sans-serif</code> 字体(操作系统或浏览器指定)；</li>\n<li>对于中文字体，我们已经了解其规则了。<code>华文细黑</code>(Mac)，<code>微软雅黑</code>(Win)是这两个平台的默认中文字体。</li>\n</ul>\n<h3 id=\"注意向下兼容\"><a href=\"#注意向下兼容\" class=\"headerlink\" title=\"注意向下兼容\"></a>注意向下兼容</h3><p>到此为止，我们的字体声明已经很不错了——如果你不必考虑还在使用旧版本操作系统的用户的话。遗憾地是，中文市场还有大量的用户在使用 Windows XP，<code>宋体</code> 才是他们的主要中文字体。为了照顾到这些用户，你可以为 <code>微软雅黑</code> 增加一个 fallback：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", <span class=\"selector-tag\">Heiti</span>, \"黑体\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>同样地，你看到我们也为 Mac 系统使用了 <code>黑体</code> 作为 fallback。</p>\n<h3 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h3><h4 id=\"不加双引号可以吗？\"><a href=\"#不加双引号可以吗？\" class=\"headerlink\" title=\"不加双引号可以吗？\"></a>不加双引号可以吗？</h4><p>可以。有些英文字体的名称多于两个单词，因为单词中间有空格所以需要用 <code>&quot;&quot;</code> 包裹起来。中文字体很特别，按照英文的角度来看，像微软雅黑究竟算是一个词还是四个词呢？没关系，好在中文字体的名称里没有空格，所以 <code>&quot;&quot;</code> 不加也没什么大碍。</p>\n<p>不过，谁都不能保证在任何操作系统/浏览器环境下都是如此，若是发生了奇怪的事情，不妨加上双引号试试看。</p>\n<h4 id=\"可以默认显示某种字体吗？比如微软雅黑\"><a href=\"#可以默认显示某种字体吗？比如微软雅黑\" class=\"headerlink\" title=\"可以默认显示某种字体吗？比如微软雅黑\"></a>可以默认显示某种字体吗？比如微软雅黑</h4><p>你可能注意到了，在我们最后的字体声明里，<code>华文细黑</code> 是默认字体（如果你的系统上安装了声明里所有的中文字体的话），为什么我要先声明 Mac 系统的字体呢？</p>\n<p>按理来说，大多数网站的主要目标市场还是 Windows 用户的，所以理论上这个才是合理的声明：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", <span class=\"selector-tag\">Heiti</span>, \"黑体\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>但实际上却并非如此。在中文字体的用户群体里，很大一部分拥有 Mac 的人都同时安装了 Win 下常用的中文字体（这得归功于 Office for Mac）；但极少有 Win 用户去安装 Mac 下的中文字体。</p>\n<p>因此，把 Mac 用字体声明在前面几乎不会对 Win 用户产生什么影响（因为他们压根没有！），倒是用来做 fallback 的黑体可能会取代微软雅黑的位置，所以更保险的做法或许是这样：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">font-family</span>: <span class=\"selector-tag\">Helvetica</span>, <span class=\"selector-tag\">Tahoma</span>, <span class=\"selector-tag\">Arial</span>, <span class=\"selector-tag\">STXihei</span>, \"华文细黑\", \"<span class=\"selector-tag\">Microsoft</span> <span class=\"selector-tag\">YaHei</span>\", \"微软雅黑\", <span class=\"selector-tag\">SimSun</span>, \"宋体\", <span class=\"selector-tag\">Heiti</span>, \"黑体\", <span class=\"selector-tag\">sans-serif</span>;</div></pre></td></tr></table></figure>\n<p>但无论如何请不要把 <code>微软雅黑</code> 放在中文字体的最前面，作为史上最丑陋的中文字体之一，<code>微软雅黑</code> 实在不是什么好的选择，请照顾一下被 Mac 宠坏的用户吧，谢谢！（仅代表个人观点）</p>\n<p>BTW，如果你也像我一样不喜欢呆头呆脑的 <code>微软雅黑</code>，那就干脆把它删了吧~</p>\n<p>到此为止，虽然在我们的示例代码里没有包含 Linux 家族的例子，不过相信你也明白该怎么做了吧。</p>\n<h3 id=\"一点补充\"><a href=\"#一点补充\" class=\"headerlink\" title=\"一点补充\"></a>一点补充</h3><p>鉴于一些人对 <code>微软雅黑</code> 的排位产生异议，我不妨把上文的解决方案再延伸一步。事实是这样子的：</p>\n<ul>\n<li>把 <code>微软雅黑</code> 放前面，会导致安装了 <code>微软雅黑</code> 字体的 Mac 用户不得不面对 <code>微软雅黑</code>，而在 Mac 下比 <code>微软雅黑</code> 优雅得多的中文字体比比皆是；</li>\n<li>把 Mac 下的字体放前面，也会对 Windows 用户造成差不多的困惑，毕竟微软雅黑是 Windows 平台下显示效果最好的字体（目前为止）；<br>1 和 2，哪一种出现的概率更大一些？我想这是一个不需要计算就能知道的答案吧？</li>\n</ul>\n<p>但是——的确还有另外两个因素在纠结着：</p>\n<ul>\n<li>不少 Windows 用户因为各种原因关闭了 <code>ClearType</code>，在此情形下微软雅黑将会惨不忍睹！但是 Mac 的字体也不是好的选择，真正的胜出者？猜对了，宋体。</li>\n<li>绝大部分 Mac 下的黑体在 Windows 下模糊不清，而微软雅黑虽然丑但在 Mac 下至少能看。（间接体现了两个平台的字体渲染技术的差距）</li>\n</ul>\n<p>所以在实践中，真正接近“万无一失”的方案需要考虑以下几点：</p>\n<ul>\n<li>利用 UA 判断为不同的平台加载不一样的字体声明；</li>\n<li>除非有特别的原因，否则尽量保持正文用宋体，标题和其他可以放大些的地方用 <code>微软雅黑</code> （针对 Windows）；</li>\n<li>Mac 下的冬青体效果极佳，但是该字体在 Mac OS X 10.6 以前是没有的，所以谨慎考虑你的用户群体，或者使用华文黑体系列做 fallback；</li>\n</ul>\n<p>最后，我不想再和任何人争论字体的优劣，本文的目的是介绍使用方法而不是字体选择。“美”或“丑”向来都是很主观的事情，只因为我是作者，所以我免不了会有倾向性，然而我也相信你自己会有正确的判断，和我较真没有任何实际意义。</p>\n"},{"title":"H5皮秒游戏总结","date":"2016-12-26T08:22:12.000Z","_content":"\n\n### 写在前面\n\n前段时间公司接的一个小项目，开发在微信上传播的小游戏。\n\n游戏的流程就是提供三种瑕疵的美女图片斑点、皱纹、纹身，需要用户点击来擦除斑点、皱纹、纹身，并计时统计总的擦除用时，来进行排名。\n\n接到项目的具体需求，心里想到的就是我们经常见到的刮刮乐，刮开图层显示中奖信息，这个原理跟要开发的小游戏基本一致，及擦除掉有斑点皱纹纹身的图层显示完美的一层即可。虽然这种效果经常遇见，具体的代码实现没有去看过。\n\n\n### 过程\n\n首先，使用Canvas是肯定的了。能力的不过关，自己从0开始去写这个东西不太现实，网上搜到一些大神们写好的Demo，基本都能匹配这次开发的需求点。擦除瑕疵图层到指定百分比及显示完美图层并停止当前的计时。\n\n找了几个例子，并在本地实现简单的Demo，实现过程中，也慢慢的发现跟自己开发不能匹配的问题，例如我需要这块的Canvas能够实现：\n\n- 擦除动作（开始，结束）回调\n- 自定义笔触大小\n- 笔触边缘要柔和（虚化）\n- 能够锁定画布，在达到指定擦除范围的百分比后我需要锁定画布，防止误操作\n- 能够指定动作，项目只需要点击的动作，禁止手指移动来擦除\n\n通过在Github上寻找，锁定了插件 [wScratchPad](https://github.com/websanova/wScratchPad) 来完成这次的开发。\n\n具体使用：\n```javascript\n// 设置\n$('#elem').wScratchPad({\n    size        : 5,          // 笔触尺寸\n    bg          : '#cacaca',  // 背景可以是颜色和图片\n    fg          : '#6699ff',  // 前景可以是颜色和图片（也就是需要擦掉的层）\n    realtime    : true,       // 实时显示已擦除百分比\n    scratchDown : function(e, percent){\n        console.log(percent);\n    },\n    scratchMove : function(e, percent){\n        console.log(percent);\n    },\n    scratchUp   : function(e, percent){\n        console.log(percent);\n    },\n    cursor      : 'crosshair' // 鼠标样式（可以是图片）\n});\n\n// 方法\n$('#elem').wScratchPad('reset'); // 重置画布\n$('#elem').wScratchPad('clear'); // 清除画布\n$('#elem').wScratchPad('enabled', <boolean>); // 是否开启 默认true\n```\n\n\n### 遇到的问题\n- 插件本身笔触是生硬的，去查了下Canvas的API把笔触修改为边缘羽化效果，`createRadialGradient`\n- 项目只需要点击擦除，禁止了手指移动擦除，插件基础上增加了 `disabledMove: false` 选项\n\n**处理音频(audio)遇到的问题**\n音频资源是客户提供的网易云音乐的资源，根据网上的方法，找到了该资源的真实mp3地址，尽然2.4MB，真实很大啊，先不管大了。\n\n音频这块，我一开始的思路：\n关于[Audio](http://www.w3school.com.cn/jsref/dom_obj_audio.asp)\n\n需要实现的是进入页面自动播放音乐，点击开关停止播放，音乐ICON停止转动。然后需要知道，音频资源当前状态是否可以用了，判断 `readyState` 的状态。然有点问题，我因该先去知道音频资源是否已经加载成功，才可以去知道它的当前状态说否可以播放。关于怎么知道加载成功，我参考了两篇文章 [怎么判断 audio video 是否加载完](http://kaifage.com/notes/87/audio-ready.html)，[判断音乐是否加载怎么做？](https://segmentfault.com/q/1010000007183637)。其实最后上线，音频这块的优化我并没有做，找的理由就是催的及，懒得搞，我先给你上线再说吧。\n\n关于自动播放，在iPhone7的微信浏览器中是不自动播放的，于是又去查到这个 [轻松化解iOS系统及微信中不支持audio自动播放问题](http://webexp.cn/dlsd2016.html)，根据这个方法，自动播放的问题解决了。\n\n关于音乐持续播放的问题，因为跨页面了，貌似让一首音乐持续接着播放好像不容易实现，去看了下API， `currentTime` 设置或返回音频中的当前播放位置（以秒计）。我想法是在跳转也时候把 currentTime 的值通过 URL 传到下一页去，在下一页中去指定 `audio` 的 `currentTime`。在我去查这个问题的时候，好像没有看到关于 `currentTime` 的思路，想想也是，如果跳转挺多页的话岂不是要玩儿死，所以这个思路肯定是行不通的。\n\n有空我要先Demo下 `currentTime` 是个什么情况，及一些网易云音乐Web版是怎么做的。\n\n\n### CSS3动画性能\n发现使用 `box-shadow` 来做闪烁的效果，几个同时闪烁，会有明显的卡顿现象（小米4C），如果 用边缘羽化过的图片 来替换box-shadow的话，卡顿现象消失了。\n这里有两篇关于CSS3动画性能的文章：\n\n- [高性能 CSS3 动画](https://www.qianduan.net/high-performance-css3-animations/)\n- [CSS动画之硬件加速](https://www.w3cplus.com/css3/introduction-to-hardware-acceleration-css-animations.html)\n\n\n### 还可以更好的地方\n- 图片资源的预加载\n- 音频资源的预加载\n- JS文件合并\n- 手机上如果快速点击的话，擦除的速度会有明显的慢（小米4C）\n- 页面布局也需要花点时间再去调试\n\n### 吐槽\n- 能力不够就是累啊，加油吧。\n- 开发前再三的确认设计是否定稿，结果还是因为设计返工，整个重新整。WTF!!!\n- 致所有的UI设计师们，提供的PSD不分组命名是几个意思，量少就不说了。TM 一大堆形似图层副本的玩意儿，太浪费别人的时间了，当代码搬运工也很累的。\n\n[线上地址](http://www.searchsport.cn:8015/)，因为需要用户提供姓名和手机才可以进入，程序这块有明显的体验问题，比如第二天再来还是需要重新输入，而且程序走的是手机号不能重复，然并没有任何提示，输入不同的昵称相同的手机号，排行显示的是首次使用的昵称，解决记住登录状态的问题就OK了。\n\n**最后最后，希望自己下次能更好吧，至少不犯过去的Bugs。**\n","source":"_posts/h5-pimiao-game-project-summary.md","raw":"---\ntitle: H5皮秒游戏总结\ndate: 2016-12-26 16:22:12\ncategories: 项目总结\n---\n\n\n### 写在前面\n\n前段时间公司接的一个小项目，开发在微信上传播的小游戏。\n\n游戏的流程就是提供三种瑕疵的美女图片斑点、皱纹、纹身，需要用户点击来擦除斑点、皱纹、纹身，并计时统计总的擦除用时，来进行排名。\n\n接到项目的具体需求，心里想到的就是我们经常见到的刮刮乐，刮开图层显示中奖信息，这个原理跟要开发的小游戏基本一致，及擦除掉有斑点皱纹纹身的图层显示完美的一层即可。虽然这种效果经常遇见，具体的代码实现没有去看过。\n\n\n### 过程\n\n首先，使用Canvas是肯定的了。能力的不过关，自己从0开始去写这个东西不太现实，网上搜到一些大神们写好的Demo，基本都能匹配这次开发的需求点。擦除瑕疵图层到指定百分比及显示完美图层并停止当前的计时。\n\n找了几个例子，并在本地实现简单的Demo，实现过程中，也慢慢的发现跟自己开发不能匹配的问题，例如我需要这块的Canvas能够实现：\n\n- 擦除动作（开始，结束）回调\n- 自定义笔触大小\n- 笔触边缘要柔和（虚化）\n- 能够锁定画布，在达到指定擦除范围的百分比后我需要锁定画布，防止误操作\n- 能够指定动作，项目只需要点击的动作，禁止手指移动来擦除\n\n通过在Github上寻找，锁定了插件 [wScratchPad](https://github.com/websanova/wScratchPad) 来完成这次的开发。\n\n具体使用：\n```javascript\n// 设置\n$('#elem').wScratchPad({\n    size        : 5,          // 笔触尺寸\n    bg          : '#cacaca',  // 背景可以是颜色和图片\n    fg          : '#6699ff',  // 前景可以是颜色和图片（也就是需要擦掉的层）\n    realtime    : true,       // 实时显示已擦除百分比\n    scratchDown : function(e, percent){\n        console.log(percent);\n    },\n    scratchMove : function(e, percent){\n        console.log(percent);\n    },\n    scratchUp   : function(e, percent){\n        console.log(percent);\n    },\n    cursor      : 'crosshair' // 鼠标样式（可以是图片）\n});\n\n// 方法\n$('#elem').wScratchPad('reset'); // 重置画布\n$('#elem').wScratchPad('clear'); // 清除画布\n$('#elem').wScratchPad('enabled', <boolean>); // 是否开启 默认true\n```\n\n\n### 遇到的问题\n- 插件本身笔触是生硬的，去查了下Canvas的API把笔触修改为边缘羽化效果，`createRadialGradient`\n- 项目只需要点击擦除，禁止了手指移动擦除，插件基础上增加了 `disabledMove: false` 选项\n\n**处理音频(audio)遇到的问题**\n音频资源是客户提供的网易云音乐的资源，根据网上的方法，找到了该资源的真实mp3地址，尽然2.4MB，真实很大啊，先不管大了。\n\n音频这块，我一开始的思路：\n关于[Audio](http://www.w3school.com.cn/jsref/dom_obj_audio.asp)\n\n需要实现的是进入页面自动播放音乐，点击开关停止播放，音乐ICON停止转动。然后需要知道，音频资源当前状态是否可以用了，判断 `readyState` 的状态。然有点问题，我因该先去知道音频资源是否已经加载成功，才可以去知道它的当前状态说否可以播放。关于怎么知道加载成功，我参考了两篇文章 [怎么判断 audio video 是否加载完](http://kaifage.com/notes/87/audio-ready.html)，[判断音乐是否加载怎么做？](https://segmentfault.com/q/1010000007183637)。其实最后上线，音频这块的优化我并没有做，找的理由就是催的及，懒得搞，我先给你上线再说吧。\n\n关于自动播放，在iPhone7的微信浏览器中是不自动播放的，于是又去查到这个 [轻松化解iOS系统及微信中不支持audio自动播放问题](http://webexp.cn/dlsd2016.html)，根据这个方法，自动播放的问题解决了。\n\n关于音乐持续播放的问题，因为跨页面了，貌似让一首音乐持续接着播放好像不容易实现，去看了下API， `currentTime` 设置或返回音频中的当前播放位置（以秒计）。我想法是在跳转也时候把 currentTime 的值通过 URL 传到下一页去，在下一页中去指定 `audio` 的 `currentTime`。在我去查这个问题的时候，好像没有看到关于 `currentTime` 的思路，想想也是，如果跳转挺多页的话岂不是要玩儿死，所以这个思路肯定是行不通的。\n\n有空我要先Demo下 `currentTime` 是个什么情况，及一些网易云音乐Web版是怎么做的。\n\n\n### CSS3动画性能\n发现使用 `box-shadow` 来做闪烁的效果，几个同时闪烁，会有明显的卡顿现象（小米4C），如果 用边缘羽化过的图片 来替换box-shadow的话，卡顿现象消失了。\n这里有两篇关于CSS3动画性能的文章：\n\n- [高性能 CSS3 动画](https://www.qianduan.net/high-performance-css3-animations/)\n- [CSS动画之硬件加速](https://www.w3cplus.com/css3/introduction-to-hardware-acceleration-css-animations.html)\n\n\n### 还可以更好的地方\n- 图片资源的预加载\n- 音频资源的预加载\n- JS文件合并\n- 手机上如果快速点击的话，擦除的速度会有明显的慢（小米4C）\n- 页面布局也需要花点时间再去调试\n\n### 吐槽\n- 能力不够就是累啊，加油吧。\n- 开发前再三的确认设计是否定稿，结果还是因为设计返工，整个重新整。WTF!!!\n- 致所有的UI设计师们，提供的PSD不分组命名是几个意思，量少就不说了。TM 一大堆形似图层副本的玩意儿，太浪费别人的时间了，当代码搬运工也很累的。\n\n[线上地址](http://www.searchsport.cn:8015/)，因为需要用户提供姓名和手机才可以进入，程序这块有明显的体验问题，比如第二天再来还是需要重新输入，而且程序走的是手机号不能重复，然并没有任何提示，输入不同的昵称相同的手机号，排行显示的是首次使用的昵称，解决记住登录状态的问题就OK了。\n\n**最后最后，希望自己下次能更好吧，至少不犯过去的Bugs。**\n","slug":"h5-pimiao-game-project-summary","published":1,"updated":"2017-01-11T06:37:17.177Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0bzqxm60008acaje2qxzyyy","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>前段时间公司接的一个小项目，开发在微信上传播的小游戏。</p>\n<p>游戏的流程就是提供三种瑕疵的美女图片斑点、皱纹、纹身，需要用户点击来擦除斑点、皱纹、纹身，并计时统计总的擦除用时，来进行排名。</p>\n<p>接到项目的具体需求，心里想到的就是我们经常见到的刮刮乐，刮开图层显示中奖信息，这个原理跟要开发的小游戏基本一致，及擦除掉有斑点皱纹纹身的图层显示完美的一层即可。虽然这种效果经常遇见，具体的代码实现没有去看过。</p>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><p>首先，使用Canvas是肯定的了。能力的不过关，自己从0开始去写这个东西不太现实，网上搜到一些大神们写好的Demo，基本都能匹配这次开发的需求点。擦除瑕疵图层到指定百分比及显示完美图层并停止当前的计时。</p>\n<p>找了几个例子，并在本地实现简单的Demo，实现过程中，也慢慢的发现跟自己开发不能匹配的问题，例如我需要这块的Canvas能够实现：</p>\n<ul>\n<li>擦除动作（开始，结束）回调</li>\n<li>自定义笔触大小</li>\n<li>笔触边缘要柔和（虚化）</li>\n<li>能够锁定画布，在达到指定擦除范围的百分比后我需要锁定画布，防止误操作</li>\n<li>能够指定动作，项目只需要点击的动作，禁止手指移动来擦除</li>\n</ul>\n<p>通过在Github上寻找，锁定了插件 <a href=\"https://github.com/websanova/wScratchPad\" target=\"_blank\" rel=\"external\">wScratchPad</a> 来完成这次的开发。</p>\n<p>具体使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 设置</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(&#123;</div><div class=\"line\">    <span class=\"attr\">size</span>        : <span class=\"number\">5</span>,          <span class=\"comment\">// 笔触尺寸</span></div><div class=\"line\">    bg          : <span class=\"string\">'#cacaca'</span>,  <span class=\"comment\">// 背景可以是颜色和图片</span></div><div class=\"line\">    fg          : <span class=\"string\">'#6699ff'</span>,  <span class=\"comment\">// 前景可以是颜色和图片（也就是需要擦掉的层）</span></div><div class=\"line\">    realtime    : <span class=\"literal\">true</span>,       <span class=\"comment\">// 实时显示已擦除百分比</span></div><div class=\"line\">    scratchDown : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, percent</span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(percent);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">scratchMove</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, percent</span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(percent);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">scratchUp</span>   : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, percent</span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(percent);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">cursor</span>      : <span class=\"string\">'crosshair'</span> <span class=\"comment\">// 鼠标样式（可以是图片）</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 方法</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(<span class=\"string\">'reset'</span>); <span class=\"comment\">// 重置画布</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(<span class=\"string\">'clear'</span>); <span class=\"comment\">// 清除画布</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(<span class=\"string\">'enabled'</span>, &lt;boolean&gt;); <span class=\"comment\">// 是否开启 默认true</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h3><ul>\n<li>插件本身笔触是生硬的，去查了下Canvas的API把笔触修改为边缘羽化效果，<code>createRadialGradient</code></li>\n<li>项目只需要点击擦除，禁止了手指移动擦除，插件基础上增加了 <code>disabledMove: false</code> 选项</li>\n</ul>\n<p><strong>处理音频(audio)遇到的问题</strong><br>音频资源是客户提供的网易云音乐的资源，根据网上的方法，找到了该资源的真实mp3地址，尽然2.4MB，真实很大啊，先不管大了。</p>\n<p>音频这块，我一开始的思路：<br>关于<a href=\"http://www.w3school.com.cn/jsref/dom_obj_audio.asp\" target=\"_blank\" rel=\"external\">Audio</a></p>\n<p>需要实现的是进入页面自动播放音乐，点击开关停止播放，音乐ICON停止转动。然后需要知道，音频资源当前状态是否可以用了，判断 <code>readyState</code> 的状态。然有点问题，我因该先去知道音频资源是否已经加载成功，才可以去知道它的当前状态说否可以播放。关于怎么知道加载成功，我参考了两篇文章 <a href=\"http://kaifage.com/notes/87/audio-ready.html\" target=\"_blank\" rel=\"external\">怎么判断 audio video 是否加载完</a>，<a href=\"https://segmentfault.com/q/1010000007183637\" target=\"_blank\" rel=\"external\">判断音乐是否加载怎么做？</a>。其实最后上线，音频这块的优化我并没有做，找的理由就是催的及，懒得搞，我先给你上线再说吧。</p>\n<p>关于自动播放，在iPhone7的微信浏览器中是不自动播放的，于是又去查到这个 <a href=\"http://webexp.cn/dlsd2016.html\" target=\"_blank\" rel=\"external\">轻松化解iOS系统及微信中不支持audio自动播放问题</a>，根据这个方法，自动播放的问题解决了。</p>\n<p>关于音乐持续播放的问题，因为跨页面了，貌似让一首音乐持续接着播放好像不容易实现，去看了下API， <code>currentTime</code> 设置或返回音频中的当前播放位置（以秒计）。我想法是在跳转也时候把 currentTime 的值通过 URL 传到下一页去，在下一页中去指定 <code>audio</code> 的 <code>currentTime</code>。在我去查这个问题的时候，好像没有看到关于 <code>currentTime</code> 的思路，想想也是，如果跳转挺多页的话岂不是要玩儿死，所以这个思路肯定是行不通的。</p>\n<p>有空我要先Demo下 <code>currentTime</code> 是个什么情况，及一些网易云音乐Web版是怎么做的。</p>\n<h3 id=\"CSS3动画性能\"><a href=\"#CSS3动画性能\" class=\"headerlink\" title=\"CSS3动画性能\"></a>CSS3动画性能</h3><p>发现使用 <code>box-shadow</code> 来做闪烁的效果，几个同时闪烁，会有明显的卡顿现象（小米4C），如果 用边缘羽化过的图片 来替换box-shadow的话，卡顿现象消失了。<br>这里有两篇关于CSS3动画性能的文章：</p>\n<ul>\n<li><a href=\"https://www.qianduan.net/high-performance-css3-animations/\" target=\"_blank\" rel=\"external\">高性能 CSS3 动画</a></li>\n<li><a href=\"https://www.w3cplus.com/css3/introduction-to-hardware-acceleration-css-animations.html\" target=\"_blank\" rel=\"external\">CSS动画之硬件加速</a></li>\n</ul>\n<h3 id=\"还可以更好的地方\"><a href=\"#还可以更好的地方\" class=\"headerlink\" title=\"还可以更好的地方\"></a>还可以更好的地方</h3><ul>\n<li>图片资源的预加载</li>\n<li>音频资源的预加载</li>\n<li>JS文件合并</li>\n<li>手机上如果快速点击的话，擦除的速度会有明显的慢（小米4C）</li>\n<li>页面布局也需要花点时间再去调试</li>\n</ul>\n<h3 id=\"吐槽\"><a href=\"#吐槽\" class=\"headerlink\" title=\"吐槽\"></a>吐槽</h3><ul>\n<li>能力不够就是累啊，加油吧。</li>\n<li>开发前再三的确认设计是否定稿，结果还是因为设计返工，整个重新整。WTF!!!</li>\n<li>致所有的UI设计师们，提供的PSD不分组命名是几个意思，量少就不说了。TM 一大堆形似图层副本的玩意儿，太浪费别人的时间了，当代码搬运工也很累的。</li>\n</ul>\n<p><a href=\"http://www.searchsport.cn:8015/\" target=\"_blank\" rel=\"external\">线上地址</a>，因为需要用户提供姓名和手机才可以进入，程序这块有明显的体验问题，比如第二天再来还是需要重新输入，而且程序走的是手机号不能重复，然并没有任何提示，输入不同的昵称相同的手机号，排行显示的是首次使用的昵称，解决记住登录状态的问题就OK了。</p>\n<p><strong>最后最后，希望自己下次能更好吧，至少不犯过去的Bugs。</strong></p>\n","excerpt":"","more":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>前段时间公司接的一个小项目，开发在微信上传播的小游戏。</p>\n<p>游戏的流程就是提供三种瑕疵的美女图片斑点、皱纹、纹身，需要用户点击来擦除斑点、皱纹、纹身，并计时统计总的擦除用时，来进行排名。</p>\n<p>接到项目的具体需求，心里想到的就是我们经常见到的刮刮乐，刮开图层显示中奖信息，这个原理跟要开发的小游戏基本一致，及擦除掉有斑点皱纹纹身的图层显示完美的一层即可。虽然这种效果经常遇见，具体的代码实现没有去看过。</p>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><p>首先，使用Canvas是肯定的了。能力的不过关，自己从0开始去写这个东西不太现实，网上搜到一些大神们写好的Demo，基本都能匹配这次开发的需求点。擦除瑕疵图层到指定百分比及显示完美图层并停止当前的计时。</p>\n<p>找了几个例子，并在本地实现简单的Demo，实现过程中，也慢慢的发现跟自己开发不能匹配的问题，例如我需要这块的Canvas能够实现：</p>\n<ul>\n<li>擦除动作（开始，结束）回调</li>\n<li>自定义笔触大小</li>\n<li>笔触边缘要柔和（虚化）</li>\n<li>能够锁定画布，在达到指定擦除范围的百分比后我需要锁定画布，防止误操作</li>\n<li>能够指定动作，项目只需要点击的动作，禁止手指移动来擦除</li>\n</ul>\n<p>通过在Github上寻找，锁定了插件 <a href=\"https://github.com/websanova/wScratchPad\">wScratchPad</a> 来完成这次的开发。</p>\n<p>具体使用：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">// 设置</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(&#123;</div><div class=\"line\">    <span class=\"attr\">size</span>        : <span class=\"number\">5</span>,          <span class=\"comment\">// 笔触尺寸</span></div><div class=\"line\">    bg          : <span class=\"string\">'#cacaca'</span>,  <span class=\"comment\">// 背景可以是颜色和图片</span></div><div class=\"line\">    fg          : <span class=\"string\">'#6699ff'</span>,  <span class=\"comment\">// 前景可以是颜色和图片（也就是需要擦掉的层）</span></div><div class=\"line\">    realtime    : <span class=\"literal\">true</span>,       <span class=\"comment\">// 实时显示已擦除百分比</span></div><div class=\"line\">    scratchDown : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, percent</span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(percent);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">scratchMove</span> : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, percent</span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(percent);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">scratchUp</span>   : <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">e, percent</span>)</span>&#123;</div><div class=\"line\">        <span class=\"built_in\">console</span>.log(percent);</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">cursor</span>      : <span class=\"string\">'crosshair'</span> <span class=\"comment\">// 鼠标样式（可以是图片）</span></div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">// 方法</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(<span class=\"string\">'reset'</span>); <span class=\"comment\">// 重置画布</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(<span class=\"string\">'clear'</span>); <span class=\"comment\">// 清除画布</span></div><div class=\"line\">$(<span class=\"string\">'#elem'</span>).wScratchPad(<span class=\"string\">'enabled'</span>, &lt;boolean&gt;); <span class=\"comment\">// 是否开启 默认true</span></div></pre></td></tr></table></figure></p>\n<h3 id=\"遇到的问题\"><a href=\"#遇到的问题\" class=\"headerlink\" title=\"遇到的问题\"></a>遇到的问题</h3><ul>\n<li>插件本身笔触是生硬的，去查了下Canvas的API把笔触修改为边缘羽化效果，<code>createRadialGradient</code></li>\n<li>项目只需要点击擦除，禁止了手指移动擦除，插件基础上增加了 <code>disabledMove: false</code> 选项</li>\n</ul>\n<p><strong>处理音频(audio)遇到的问题</strong><br>音频资源是客户提供的网易云音乐的资源，根据网上的方法，找到了该资源的真实mp3地址，尽然2.4MB，真实很大啊，先不管大了。</p>\n<p>音频这块，我一开始的思路：<br>关于<a href=\"http://www.w3school.com.cn/jsref/dom_obj_audio.asp\">Audio</a></p>\n<p>需要实现的是进入页面自动播放音乐，点击开关停止播放，音乐ICON停止转动。然后需要知道，音频资源当前状态是否可以用了，判断 <code>readyState</code> 的状态。然有点问题，我因该先去知道音频资源是否已经加载成功，才可以去知道它的当前状态说否可以播放。关于怎么知道加载成功，我参考了两篇文章 <a href=\"http://kaifage.com/notes/87/audio-ready.html\">怎么判断 audio video 是否加载完</a>，<a href=\"https://segmentfault.com/q/1010000007183637\">判断音乐是否加载怎么做？</a>。其实最后上线，音频这块的优化我并没有做，找的理由就是催的及，懒得搞，我先给你上线再说吧。</p>\n<p>关于自动播放，在iPhone7的微信浏览器中是不自动播放的，于是又去查到这个 <a href=\"http://webexp.cn/dlsd2016.html\">轻松化解iOS系统及微信中不支持audio自动播放问题</a>，根据这个方法，自动播放的问题解决了。</p>\n<p>关于音乐持续播放的问题，因为跨页面了，貌似让一首音乐持续接着播放好像不容易实现，去看了下API， <code>currentTime</code> 设置或返回音频中的当前播放位置（以秒计）。我想法是在跳转也时候把 currentTime 的值通过 URL 传到下一页去，在下一页中去指定 <code>audio</code> 的 <code>currentTime</code>。在我去查这个问题的时候，好像没有看到关于 <code>currentTime</code> 的思路，想想也是，如果跳转挺多页的话岂不是要玩儿死，所以这个思路肯定是行不通的。</p>\n<p>有空我要先Demo下 <code>currentTime</code> 是个什么情况，及一些网易云音乐Web版是怎么做的。</p>\n<h3 id=\"CSS3动画性能\"><a href=\"#CSS3动画性能\" class=\"headerlink\" title=\"CSS3动画性能\"></a>CSS3动画性能</h3><p>发现使用 <code>box-shadow</code> 来做闪烁的效果，几个同时闪烁，会有明显的卡顿现象（小米4C），如果 用边缘羽化过的图片 来替换box-shadow的话，卡顿现象消失了。<br>这里有两篇关于CSS3动画性能的文章：</p>\n<ul>\n<li><a href=\"https://www.qianduan.net/high-performance-css3-animations/\">高性能 CSS3 动画</a></li>\n<li><a href=\"https://www.w3cplus.com/css3/introduction-to-hardware-acceleration-css-animations.html\">CSS动画之硬件加速</a></li>\n</ul>\n<h3 id=\"还可以更好的地方\"><a href=\"#还可以更好的地方\" class=\"headerlink\" title=\"还可以更好的地方\"></a>还可以更好的地方</h3><ul>\n<li>图片资源的预加载</li>\n<li>音频资源的预加载</li>\n<li>JS文件合并</li>\n<li>手机上如果快速点击的话，擦除的速度会有明显的慢（小米4C）</li>\n<li>页面布局也需要花点时间再去调试</li>\n</ul>\n<h3 id=\"吐槽\"><a href=\"#吐槽\" class=\"headerlink\" title=\"吐槽\"></a>吐槽</h3><ul>\n<li>能力不够就是累啊，加油吧。</li>\n<li>开发前再三的确认设计是否定稿，结果还是因为设计返工，整个重新整。WTF!!!</li>\n<li>致所有的UI设计师们，提供的PSD不分组命名是几个意思，量少就不说了。TM 一大堆形似图层副本的玩意儿，太浪费别人的时间了，当代码搬运工也很累的。</li>\n</ul>\n<p><a href=\"http://www.searchsport.cn:8015/\">线上地址</a>，因为需要用户提供姓名和手机才可以进入，程序这块有明显的体验问题，比如第二天再来还是需要重新输入，而且程序走的是手机号不能重复，然并没有任何提示，输入不同的昵称相同的手机号，排行显示的是首次使用的昵称，解决记住登录状态的问题就OK了。</p>\n<p><strong>最后最后，希望自己下次能更好吧，至少不犯过去的Bugs。</strong></p>\n"},{"title":"HTML5 audio 跨页面持续播放","date":"2017-01-17T03:48:40.000Z","_content":"\n### 写在前面\n继 [上个H5活动](http://bestcsser.cc/2016/12/26/h5-pimiao-game-project-summary/) 关于音乐跨页面持续播放的问题，没有在上个项目里解决掉，妥协使用每个页面重新播放。\n这次的H5活动同样也需要用到背景音乐。提前去搜索相关的文章，看能不能很好的解决这个问题。\n\n\n### 过程\n关于跨页面持续播放音乐的场景，第一个想到的就是网易云音乐Web版的音乐播放，看了源码具体的DOM结构就是播放器和页面是分开的，页面是使用iFrame来展现，即使跳转页面，\n也只是在iFrame内跳转，这就解决了问题（我说的很肤浅）。\n\n手机端显然是不能够用到iFrame的（一直很抵触使用iFrame）。只能再去查了。\n\n`currentTime` 设置或返回当前播放位置（以秒计）。既然有了 `currentTime` ，问题是不是就是好解决了...\n\n使用 `localStorage` 在跳转页面前把 `currentTime` 存储起来，再打开新的页面中，为音乐设置最新的 `currentTime`，这样以来音乐就能够在新打开的页面接着在上次跳转的时候播放了。\n\n由于该活动是在朋友圈传播，之前有听说微信内置浏览器对 `localStorage` 的支持不够友好，关于这个问题查了很多文章，说的云里雾里，最后还是没结果。那就直接写吧。\n\n\n### 遇到的问题及想到的\n最后代码的实现及在手机端的测试（小米4C，iphone6s/iphone7最新版微信），都能够实现在新打开的页面接着在上次跳转的时候播放。虽然问题是解决了，但在实际中体验还是不够好，\n每次打开新的页面，音乐都要重新加载一次，网络状况不好的情况，就很尴尬，等了许久音乐才继续播放，也可能在用户要进去下一个新的页面了，音乐还是没加载好。网络状况理想的\n情况下，表现还是不错的。\n\n最后再想想这个事情，最简单直接的实现就是 单页面 来开发。就不用为音乐的事情犯愁了，当然音乐文件越小越理想。\n\n这是地址 [Fast-PK](http://coding-living.coding.me/Fast-PK-H5)\n\n\n### 关于audio/video\n- [video标签在不同平台上的事件表现差异分析](http://imweb.io/topic/560a6015c2317a8c3e086207)\n- [HTML5 Audio-使用 Media 事件添加进度栏](http://www.xuanfengge.com/html5-audio-using-a-media-event-to-add-a-progress-bar.html)\n","source":"_posts/html5-audio-across-pages-continues-play.md","raw":"---\ntitle: 'HTML5 audio 跨页面持续播放'\ndate: 2017-01-17 11:48:40\ncategories: 项目总结\ntags: ['audio','localStorage']\n---\n\n### 写在前面\n继 [上个H5活动](http://bestcsser.cc/2016/12/26/h5-pimiao-game-project-summary/) 关于音乐跨页面持续播放的问题，没有在上个项目里解决掉，妥协使用每个页面重新播放。\n这次的H5活动同样也需要用到背景音乐。提前去搜索相关的文章，看能不能很好的解决这个问题。\n\n\n### 过程\n关于跨页面持续播放音乐的场景，第一个想到的就是网易云音乐Web版的音乐播放，看了源码具体的DOM结构就是播放器和页面是分开的，页面是使用iFrame来展现，即使跳转页面，\n也只是在iFrame内跳转，这就解决了问题（我说的很肤浅）。\n\n手机端显然是不能够用到iFrame的（一直很抵触使用iFrame）。只能再去查了。\n\n`currentTime` 设置或返回当前播放位置（以秒计）。既然有了 `currentTime` ，问题是不是就是好解决了...\n\n使用 `localStorage` 在跳转页面前把 `currentTime` 存储起来，再打开新的页面中，为音乐设置最新的 `currentTime`，这样以来音乐就能够在新打开的页面接着在上次跳转的时候播放了。\n\n由于该活动是在朋友圈传播，之前有听说微信内置浏览器对 `localStorage` 的支持不够友好，关于这个问题查了很多文章，说的云里雾里，最后还是没结果。那就直接写吧。\n\n\n### 遇到的问题及想到的\n最后代码的实现及在手机端的测试（小米4C，iphone6s/iphone7最新版微信），都能够实现在新打开的页面接着在上次跳转的时候播放。虽然问题是解决了，但在实际中体验还是不够好，\n每次打开新的页面，音乐都要重新加载一次，网络状况不好的情况，就很尴尬，等了许久音乐才继续播放，也可能在用户要进去下一个新的页面了，音乐还是没加载好。网络状况理想的\n情况下，表现还是不错的。\n\n最后再想想这个事情，最简单直接的实现就是 单页面 来开发。就不用为音乐的事情犯愁了，当然音乐文件越小越理想。\n\n这是地址 [Fast-PK](http://coding-living.coding.me/Fast-PK-H5)\n\n\n### 关于audio/video\n- [video标签在不同平台上的事件表现差异分析](http://imweb.io/topic/560a6015c2317a8c3e086207)\n- [HTML5 Audio-使用 Media 事件添加进度栏](http://www.xuanfengge.com/html5-audio-using-a-media-event-to-add-a-progress-bar.html)\n","slug":"html5-audio-across-pages-continues-play","published":1,"updated":"2017-03-09T09:28:46.066Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0bzqxma0009acajiy8xi0tr","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>继 <a href=\"http://bestcsser.cc/2016/12/26/h5-pimiao-game-project-summary/\" target=\"_blank\" rel=\"external\">上个H5活动</a> 关于音乐跨页面持续播放的问题，没有在上个项目里解决掉，妥协使用每个页面重新播放。<br>这次的H5活动同样也需要用到背景音乐。提前去搜索相关的文章，看能不能很好的解决这个问题。</p>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><p>关于跨页面持续播放音乐的场景，第一个想到的就是网易云音乐Web版的音乐播放，看了源码具体的DOM结构就是播放器和页面是分开的，页面是使用iFrame来展现，即使跳转页面，<br>也只是在iFrame内跳转，这就解决了问题（我说的很肤浅）。</p>\n<p>手机端显然是不能够用到iFrame的（一直很抵触使用iFrame）。只能再去查了。</p>\n<p><code>currentTime</code> 设置或返回当前播放位置（以秒计）。既然有了 <code>currentTime</code> ，问题是不是就是好解决了…</p>\n<p>使用 <code>localStorage</code> 在跳转页面前把 <code>currentTime</code> 存储起来，再打开新的页面中，为音乐设置最新的 <code>currentTime</code>，这样以来音乐就能够在新打开的页面接着在上次跳转的时候播放了。</p>\n<p>由于该活动是在朋友圈传播，之前有听说微信内置浏览器对 <code>localStorage</code> 的支持不够友好，关于这个问题查了很多文章，说的云里雾里，最后还是没结果。那就直接写吧。</p>\n<h3 id=\"遇到的问题及想到的\"><a href=\"#遇到的问题及想到的\" class=\"headerlink\" title=\"遇到的问题及想到的\"></a>遇到的问题及想到的</h3><p>最后代码的实现及在手机端的测试（小米4C，iphone6s/iphone7最新版微信），都能够实现在新打开的页面接着在上次跳转的时候播放。虽然问题是解决了，但在实际中体验还是不够好，<br>每次打开新的页面，音乐都要重新加载一次，网络状况不好的情况，就很尴尬，等了许久音乐才继续播放，也可能在用户要进去下一个新的页面了，音乐还是没加载好。网络状况理想的<br>情况下，表现还是不错的。</p>\n<p>最后再想想这个事情，最简单直接的实现就是 单页面 来开发。就不用为音乐的事情犯愁了，当然音乐文件越小越理想。</p>\n<p>这是地址 <a href=\"http://coding-living.coding.me/Fast-PK-H5\" target=\"_blank\" rel=\"external\">Fast-PK</a></p>\n<h3 id=\"关于audio-video\"><a href=\"#关于audio-video\" class=\"headerlink\" title=\"关于audio/video\"></a>关于audio/video</h3><ul>\n<li><a href=\"http://imweb.io/topic/560a6015c2317a8c3e086207\" target=\"_blank\" rel=\"external\">video标签在不同平台上的事件表现差异分析</a></li>\n<li><a href=\"http://www.xuanfengge.com/html5-audio-using-a-media-event-to-add-a-progress-bar.html\" target=\"_blank\" rel=\"external\">HTML5 Audio-使用 Media 事件添加进度栏</a></li>\n</ul>\n","excerpt":"","more":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>继 <a href=\"http://bestcsser.cc/2016/12/26/h5-pimiao-game-project-summary/\">上个H5活动</a> 关于音乐跨页面持续播放的问题，没有在上个项目里解决掉，妥协使用每个页面重新播放。<br>这次的H5活动同样也需要用到背景音乐。提前去搜索相关的文章，看能不能很好的解决这个问题。</p>\n<h3 id=\"过程\"><a href=\"#过程\" class=\"headerlink\" title=\"过程\"></a>过程</h3><p>关于跨页面持续播放音乐的场景，第一个想到的就是网易云音乐Web版的音乐播放，看了源码具体的DOM结构就是播放器和页面是分开的，页面是使用iFrame来展现，即使跳转页面，<br>也只是在iFrame内跳转，这就解决了问题（我说的很肤浅）。</p>\n<p>手机端显然是不能够用到iFrame的（一直很抵触使用iFrame）。只能再去查了。</p>\n<p><code>currentTime</code> 设置或返回当前播放位置（以秒计）。既然有了 <code>currentTime</code> ，问题是不是就是好解决了…</p>\n<p>使用 <code>localStorage</code> 在跳转页面前把 <code>currentTime</code> 存储起来，再打开新的页面中，为音乐设置最新的 <code>currentTime</code>，这样以来音乐就能够在新打开的页面接着在上次跳转的时候播放了。</p>\n<p>由于该活动是在朋友圈传播，之前有听说微信内置浏览器对 <code>localStorage</code> 的支持不够友好，关于这个问题查了很多文章，说的云里雾里，最后还是没结果。那就直接写吧。</p>\n<h3 id=\"遇到的问题及想到的\"><a href=\"#遇到的问题及想到的\" class=\"headerlink\" title=\"遇到的问题及想到的\"></a>遇到的问题及想到的</h3><p>最后代码的实现及在手机端的测试（小米4C，iphone6s/iphone7最新版微信），都能够实现在新打开的页面接着在上次跳转的时候播放。虽然问题是解决了，但在实际中体验还是不够好，<br>每次打开新的页面，音乐都要重新加载一次，网络状况不好的情况，就很尴尬，等了许久音乐才继续播放，也可能在用户要进去下一个新的页面了，音乐还是没加载好。网络状况理想的<br>情况下，表现还是不错的。</p>\n<p>最后再想想这个事情，最简单直接的实现就是 单页面 来开发。就不用为音乐的事情犯愁了，当然音乐文件越小越理想。</p>\n<p>这是地址 <a href=\"http://coding-living.coding.me/Fast-PK-H5\">Fast-PK</a></p>\n<h3 id=\"关于audio-video\"><a href=\"#关于audio-video\" class=\"headerlink\" title=\"关于audio/video\"></a>关于audio/video</h3><ul>\n<li><a href=\"http://imweb.io/topic/560a6015c2317a8c3e086207\">video标签在不同平台上的事件表现差异分析</a></li>\n<li><a href=\"http://www.xuanfengge.com/html5-audio-using-a-media-event-to-add-a-progress-bar.html\">HTML5 Audio-使用 Media 事件添加进度栏</a></li>\n</ul>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj0bzqxll0000acaj8i3wjkou","category_id":"cj0bzqxlw0004acajxha800ai","_id":"cj0bzqxme000dacaj3lvx7vgj"},{"post_id":"cj0bzqxm60008acaje2qxzyyy","category_id":"cj0bzqxmc000aacajfa948mep","_id":"cj0bzqxmh000gacajcmith32j"},{"post_id":"cj0bzqxma0009acajiy8xi0tr","category_id":"cj0bzqxmc000aacajfa948mep","_id":"cj0bzqxmh000hacajr49qs3ii"},{"post_id":"cj0bzqxlz0006acajaqiue6ex","category_id":"cj0bzqxmc000aacajfa948mep","_id":"cj0c0rzed0001dsajhjf2aafk"}],"PostTag":[{"post_id":"cj0bzqxll0000acaj8i3wjkou","tag_id":"cj0bzqxly0005acaj3vbax0ck","_id":"cj0bzqxmc000bacajc4sdjvps"},{"post_id":"cj0bzqxma0009acajiy8xi0tr","tag_id":"cj0bzqxmd000cacaj38dfxmu3","_id":"cj0bzqxmh000iacaje025n8pn"},{"post_id":"cj0bzqxma0009acajiy8xi0tr","tag_id":"cj0bzqxmf000facajt01mrdhk","_id":"cj0bzqxmi000jacaj9hkizaus"},{"post_id":"cj0bzqxlz0006acajaqiue6ex","tag_id":"cj0c0rzec0000dsaj6k5ee5dt","_id":"cj0c0rzed0002dsajltsp34cy"}],"Tag":[{"name":"array","_id":"cj0bzqxly0005acaj3vbax0ck"},{"name":"audio","_id":"cj0bzqxmd000cacaj38dfxmu3"},{"name":"localStorage","_id":"cj0bzqxmf000facajt01mrdhk"},{"name":"font","_id":"cj0c0rzec0000dsaj6k5ee5dt"}]}}